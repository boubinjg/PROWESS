{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = predicate;\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction predicate(fn) {\n  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (typeof fn !== 'function') {\n    throw new TypeError('`fn` must be a function');\n  }\n\n  if (typeof message !== 'string') {\n    throw new TypeError('`message`, if provided, must be a string');\n  }\n\n  function requiredValidator(props, propName, componentName) {\n    var result = fn(props[propName]);\n\n    if (result) {\n      return null;\n    }\n\n    return new TypeError(\"`\".concat(componentName, \"` requires that `\").concat(propName, \"` pass a predicate function\").concat(message ? \": \".concat(message) : '', \".\"));\n  }\n\n  function validator(props, propName) {\n    if (props[propName] == null) {\n      return null;\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      rest[_key - 2] = arguments[_key];\n    }\n\n    return requiredValidator.apply(void 0, [props, propName].concat(rest));\n  }\n\n  validator.isRequired = requiredValidator;\n  return (0, _wrapValidator[\"default\"])(validator, 'predicate', fn);\n}","map":{"version":3,"sources":["../src/predicate.js"],"names":["message","result","fn","props","rest","requiredValidator","validator"],"mappings":";;;;;;;AAAA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;AAEe,SAAA,SAAA,CAAA,EAAA,EAAqC;AAAA,MAAdA,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAClD,MAAI,OAAA,EAAA,KAAJ,UAAA,EAA8B;AAC5B,UAAM,IAAA,SAAA,CAAN,yBAAM,CAAN;AACD;;AACD,MAAI,OAAA,OAAA,KAAJ,QAAA,EAAiC;AAC/B,UAAM,IAAA,SAAA,CAAN,0CAAM,CAAN;AACD;;AAED,WAAA,iBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAA2D;AACzD,QAAMC,MAAM,GAAGC,EAAE,CAACC,KAAK,CAAvB,QAAuB,CAAN,CAAjB;;AACA,QAAA,MAAA,EAAY;AACV,aAAA,IAAA;AACD;;AACD,WAAO,IAAA,SAAA,CAAA,IAAA,MAAA,CAAA,aAAA,EAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,CAA6FH,OAAO,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,GAApG,EAAA,EAAP,GAAO,CAAA,CAAP;AACD;;AAED,WAAA,SAAA,CAAA,KAAA,EAAA,QAAA,EAA6C;AAC3C,QAAIG,KAAK,CAALA,QAAK,CAALA,IAAJ,IAAA,EAA6B;AAC3B,aAAA,IAAA;AACD;;AAH0C,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAI3C,WAAOC,iBAAiB,CAAjBA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,MAAAA,CAAP,IAAOA,CAAAA,CAAP;AACD;;AACDC,EAAAA,SAAS,CAATA,UAAAA,GAAAA,iBAAAA;AAEA,SAAO,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAA,WAAA,EAAP,EAAO,CAAP;AACD","sourcesContent":["import wrapValidator from './helpers/wrapValidator';\n\nexport default function predicate(fn, message = '') {\n  if (typeof fn !== 'function') {\n    throw new TypeError('`fn` must be a function');\n  }\n  if (typeof message !== 'string') {\n    throw new TypeError('`message`, if provided, must be a string');\n  }\n\n  function requiredValidator(props, propName, componentName) {\n    const result = fn(props[propName]);\n    if (result) {\n      return null;\n    }\n    return new TypeError(`\\`${componentName}\\` requires that \\`${propName}\\` pass a predicate function${message ? `: ${message}` : ''}.`);\n  }\n\n  function validator(props, propName, ...rest) {\n    if (props[propName] == null) {\n      return null;\n    }\n    return requiredValidator(props, propName, ...rest);\n  }\n  validator.isRequired = requiredValidator;\n\n  return wrapValidator(validator, 'predicate', fn);\n}\n"]},"metadata":{},"sourceType":"script"}