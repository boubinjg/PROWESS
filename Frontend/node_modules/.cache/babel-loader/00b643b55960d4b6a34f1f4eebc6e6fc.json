{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar SameValue = require('./SameValue');\n\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow\n\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  }\n\n  var Desc = isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, desc) ? desc : ToPropertyDescriptor(desc);\n\n  if (!isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, Desc)) {\n    throw new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n  }\n\n  return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n};","map":{"version":3,"sources":["/home/jayson/Code/IoTLabScratchpad/IoTLabScheduler/Frontend/node_modules/es-abstract/2020/DefinePropertyOrThrow.js"],"names":["GetIntrinsic","require","$TypeError","isPropertyDescriptor","DefineOwnProperty","FromPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsPropertyKey","SameValue","ToPropertyDescriptor","Type","module","exports","DefinePropertyOrThrow","O","P","desc","Desc"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,oBAAoB,GAAGF,OAAO,CAAC,iCAAD,CAAlC;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,8BAAD,CAA/B;;AAEA,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAIK,oBAAoB,GAAGL,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIM,gBAAgB,GAAGN,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIQ,SAAS,GAAGR,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIS,oBAAoB,GAAGT,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIU,IAAI,GAAGV,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAW,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkCC,CAAlC,EAAqCC,IAArC,EAA2C;AAC3D,MAAIN,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIb,UAAJ,CAAe,yCAAf,CAAN;AACA;;AAED,MAAI,CAACM,aAAa,CAACQ,CAAD,CAAlB,EAAuB;AACtB,UAAM,IAAId,UAAJ,CAAe,gDAAf,CAAN;AACA;;AAED,MAAIgB,IAAI,GAAGf,oBAAoB,CAAC;AAC/BQ,IAAAA,IAAI,EAAEA,IADyB;AAE/BJ,IAAAA,gBAAgB,EAAEA,gBAFa;AAG/BD,IAAAA,oBAAoB,EAAEA;AAHS,GAAD,EAI5BW,IAJ4B,CAApB,GAIAA,IAJA,GAIOP,oBAAoB,CAACO,IAAD,CAJtC;;AAKA,MAAI,CAACd,oBAAoB,CAAC;AACzBQ,IAAAA,IAAI,EAAEA,IADmB;AAEzBJ,IAAAA,gBAAgB,EAAEA,gBAFO;AAGzBD,IAAAA,oBAAoB,EAAEA;AAHG,GAAD,EAItBY,IAJsB,CAAzB,EAIU;AACT,UAAM,IAAIhB,UAAJ,CAAe,2DAAf,CAAN;AACA;;AAED,SAAOE,iBAAiB,CACvBG,gBADuB,EAEvBE,SAFuB,EAGvBJ,sBAHuB,EAIvBU,CAJuB,EAKvBC,CALuB,EAMvBE,IANuB,CAAxB;AAQA,CA9BD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\tvar Desc = isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, desc) ? desc : ToPropertyDescriptor(desc);\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n\t}\n\n\treturn DefineOwnProperty(\n\t\tIsDataDescriptor,\n\t\tSameValue,\n\t\tFromPropertyDescriptor,\n\t\tO,\n\t\tP,\n\t\tDesc\n\t);\n};\n"]},"metadata":{},"sourceType":"script"}