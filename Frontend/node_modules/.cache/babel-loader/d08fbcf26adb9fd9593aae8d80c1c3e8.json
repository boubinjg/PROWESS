{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar CreateDataProperty = require('./CreateDataProperty');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar Type = require('./Type'); // // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\n\nmodule.exports = function CreateDataPropertyOrThrow(O, P, V) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  }\n\n  var success = CreateDataProperty(O, P, V);\n\n  if (!success) {\n    throw new $TypeError('unable to create data property');\n  }\n\n  return success;\n};","map":{"version":3,"sources":["/home/boubin.2/PROWESS/Frontend/node_modules/es-abstract/2020/CreateDataPropertyOrThrow.js"],"names":["GetIntrinsic","require","$TypeError","CreateDataProperty","IsPropertyKey","Type","module","exports","CreateDataPropertyOrThrow","O","P","V","success"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,kBAAkB,GAAGF,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsCC,CAAtC,EAAyCC,CAAzC,EAA4C;AAC5D,MAAIN,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIP,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,MAAI,CAACE,aAAa,CAACM,CAAD,CAAlB,EAAuB;AACtB,UAAM,IAAIR,UAAJ,CAAe,gDAAf,CAAN;AACA;;AACD,MAAIU,OAAO,GAAGT,kBAAkB,CAACM,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAhC;;AACA,MAAI,CAACC,OAAL,EAAc;AACb,UAAM,IAAIV,UAAJ,CAAe,gCAAf,CAAN;AACA;;AACD,SAAOU,OAAP;AACA,CAZD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar CreateDataProperty = require('./CreateDataProperty');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\nmodule.exports = function CreateDataPropertyOrThrow(O, P, V) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\tvar success = CreateDataProperty(O, P, V);\n\tif (!success) {\n\t\tthrow new $TypeError('unable to create data property');\n\t}\n\treturn success;\n};\n"]},"metadata":{},"sourceType":"script"}