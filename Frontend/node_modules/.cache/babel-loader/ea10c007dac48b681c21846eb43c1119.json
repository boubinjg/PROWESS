{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $match = GetIntrinsic('%Symbol.match%', true);\n\nvar hasRegExpMatcher = require('is-regex');\n\nvar ToBoolean = require('./ToBoolean'); // https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n\n\nmodule.exports = function IsRegExp(argument) {\n  if (!argument || typeof argument !== 'object') {\n    return false;\n  }\n\n  if ($match) {\n    var isRegExp = argument[$match];\n\n    if (typeof isRegExp !== 'undefined') {\n      return ToBoolean(isRegExp);\n    }\n  }\n\n  return hasRegExpMatcher(argument);\n};","map":{"version":3,"sources":["/home/boubin.2/PROWESS/Frontend/node_modules/es-abstract/2020/IsRegExp.js"],"names":["GetIntrinsic","require","$match","hasRegExpMatcher","ToBoolean","module","exports","IsRegExp","argument","isRegExp"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,MAAM,GAAGF,YAAY,CAAC,gBAAD,EAAmB,IAAnB,CAAzB;;AAEA,IAAIG,gBAAgB,GAAGF,OAAO,CAAC,UAAD,CAA9B;;AAEA,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAvB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC5C,MAAI,CAACA,QAAD,IAAa,OAAOA,QAAP,KAAoB,QAArC,EAA+C;AAC9C,WAAO,KAAP;AACA;;AACD,MAAIN,MAAJ,EAAY;AACX,QAAIO,QAAQ,GAAGD,QAAQ,CAACN,MAAD,CAAvB;;AACA,QAAI,OAAOO,QAAP,KAAoB,WAAxB,EAAqC;AACpC,aAAOL,SAAS,CAACK,QAAD,CAAhB;AACA;AACD;;AACD,SAAON,gBAAgB,CAACK,QAAD,CAAvB;AACA,CAXD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $match = GetIntrinsic('%Symbol.match%', true);\n\nvar hasRegExpMatcher = require('is-regex');\n\nvar ToBoolean = require('./ToBoolean');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n\nmodule.exports = function IsRegExp(argument) {\n\tif (!argument || typeof argument !== 'object') {\n\t\treturn false;\n\t}\n\tif ($match) {\n\t\tvar isRegExp = argument[$match];\n\t\tif (typeof isRegExp !== 'undefined') {\n\t\t\treturn ToBoolean(isRegExp);\n\t\t}\n\t}\n\treturn hasRegExpMatcher(argument);\n};\n"]},"metadata":{},"sourceType":"script"}