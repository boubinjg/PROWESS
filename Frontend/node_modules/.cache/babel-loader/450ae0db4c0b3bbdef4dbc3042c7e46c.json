{"ast":null,"code":"var _jsxFileName = \"/home/jayson/Code/IoTLabScratchpad/IoTLabScheduler/Frontend/src/components/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport Scheduler from '../components/Scheduler';\nimport 'react-dates/initialize';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'antd/dist/antd.css';\nimport { TimePicker } from 'antd';\nimport momentPropTypes from 'react-moment-proptypes';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, Checkbox, Col, Button, Navbar, Nav, NavDropdown, FormControl } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport $ from 'jquery';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst util = require('util');\n\nconst cfg = require('../config.json');\n\nconst data = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: 'default',\n      startdate: null,\n      enddate: null,\n      starttime: moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n      endtime: moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n      focusedEnd: false,\n      container: [\"\"],\n      containerYAML: [\"\"],\n      volume: [\"\"],\n      test: 'test',\n      expdescription: '',\n      id: 0,\n      calendarData: [],\n      testbedData: [],\n      message: 'testtest',\n      status: 'Submitted',\n      containers: 1,\n      volumes: 1,\n      containersYaml: 1,\n      testbedSelect: 'none',\n      ram: '1',\n      cpu: '0.5',\n      sensors: [],\n      hardware: [],\n      tbRam: null,\n      tbCpu: null,\n      tbSensors: [],\n      tbHardwre: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.fetch = this.fetch.bind(this);\n  }\n\n  handleChange(time, variable) {\n    if (variable == 'starttime') try {\n      this.setState({\n        starttime: time.format('HH:mm:ss')\n      });\n    } catch (e) {\n      this.setState({\n        starttime: null\n      });\n    } else if (variable == 'endtime') try {\n      this.setState({\n        endtime: time.format('HH:mm:ss')\n      });\n    } catch (e) {\n      this.setState({\n        endtime: null\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var jsondata = {\n      user: this.state.user,\n      container: this.state.container,\n      containerYAML: this.state.containerYAML,\n      volume: this.state.volume,\n      StartDate: this.state.startdate.format('YYYY-MM-DD'),\n      endDate: this.state.enddate.format('YYYY-MM-DD'),\n      starttime: this.state.starttime,\n      endtime: this.state.endtime,\n      description: this.state.expdescription,\n      testbed: this.state.testbedSelect,\n      ram: this.state.ram,\n      cpu: this.state.cpu,\n      sensors: this.state.sensors,\n      hardware: this.state.hardware,\n      status: this.state.status\n    };\n    console.log(jsondata);\n    var expStart = this.state.startdate.format('YYYY-MM-DD');\n    var expStartTime = this.state.starttime;\n    var expEnd = this.state.enddate.format('YYYY-MM-DD');\n    var expEndTime = this.state.endtime;\n    var text = this.state.container + '\\n' + this.state.expdescription;\n    var newExp = {\n      start_date: expStart + ' ' + expStartTime,\n      end_date: expEnd + ' ' + expEndTime,\n      text: text,\n      id: this.state.id\n    };\n    console.log(jsondata.endDate); //this.setState({calendarData: this.state.calendarData.concat(newExp)})\n    //this.setState({id: this.state.id+1})\n\n    var context = this;\n    $.ajax({\n      url: 'https://' + cfg.domain + ':' + cfg.port + '/post',\n      type: 'POST',\n      data: jsondata,\n      success: function (msg) {\n        var text = 'Experiment Successfully Scheduled from ' + context.state.startdate.format('YYYY-MM-DD') + ' ' + context.state.starttime + ' to ' + context.state.enddate.format('YYYY-MM-DD') + ' ' + context.state.endtime;\n        alert(text);\n        console.log(msg);\n      },\n      error: function (request, status, error) {\n        alert(request.responseText);\n      }\n    });\n    this.fetch();\n  }\n\n  fetch() {\n    var context = this;\n    $.ajax({\n      url: 'https://' + cfg.domain + ':' + cfg.port + '/api',\n      method: 'GET',\n      data: data,\n      success: function (response) {\n        var resp = response.message;\n        console.log('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');\n\n        for (var key in response.message) {\n          console.log(context.state.testbedData); //console.log(context.state.testbedData.length)\n\n          var tb = response.message[key].testbed;\n\n          for (var i = 0; i < context.state.testbedData.length; ++i) {\n            var tbData = context.state.testbedData[i];\n\n            if (tbData.name == response.message[key].testbed) {\n              console.log('hit');\n              response.message[key].color = '#' + tbData.eventcolor;\n            }\n          }\n        }\n\n        console.log(response.message[key]);\n        context.setState({\n          calendarData: response.message\n        });\n      }\n    });\n  }\n\n  fetchShib() {\n    console.log(cfg.domain);\n    console.log('^^^^^^^^^^^^^^^^^');\n    fetch(cfg.domain + '/Shibboleth.sso/Session').then(response => response.json()).then(jsonData => {\n      // jsonData is parsed json object received from url\n      console.log(jsonData);\n      console.log('$$$$$$$$$$$$$$$$$$$');\n      const UID = jsonData.attributes[4].values[0].split('@')[0];\n      console.log(jsonData.attributes[4].values[0].split('@')[0]);\n      console.log(UID);\n      this.setState({\n        user: UID\n      });\n      console.log('User');\n      console.log(this.state.user);\n      console.log('$$$$$$$$$$$$$$$$$$$');\n    }).catch(error => {\n      // handle your errors here\n      console.error(error);\n    });\n  }\n\n  fetchTBs() {\n    console.log('###################');\n    var context = this;\n    $.ajax({\n      url: 'https://iot.lab.tdai.osu.edu:3001/testbeds',\n      method: 'GET',\n      data: data,\n      success: function (response) {\n        context.setState({\n          testbedData: response.message\n        });\n        console.log('TB Response:');\n        console.log(response.message);\n        context.fetch();\n      }\n    });\n  }\n\n  fetchTBRes(name) {\n    console.log('FETCH TB Results');\n    var context = this;\n    $.ajax({\n      url: 'https://iot.lab.tdai.osu.edu:3001/testbedres?name=' + name,\n      method: 'GET',\n      data: data,\n      success: function (response) {\n        context.setState({\n          testbedRes: response.message\n        });\n        console.log(context.state.testbedSelect);\n        console.log('TB Response:');\n        console.log(response.message);\n        console.log(response.message[0]);\n        context.setState({\n          ram: 0\n        });\n        context.setState({\n          cpu: 0\n        });\n        context.setState({\n          tbRam: response.message[0]\n        });\n        context.setState({\n          tbCpu: response.message[1]\n        });\n        var sensors = response.message[2];\n        if (sensors == 'None') context.setState({\n          tbSensors: null\n        });else {\n          try {\n            const result = response.message[2].split('+');\n            context.setState({\n              tbSensors: result\n            });\n            console.log(result);\n          } catch (exception) {\n            console.log('Sensor Parsing Error');\n          }\n        }\n        var hardware = response.message[3];\n        if (hardware == 'None') context.setState({\n          tbHardware: null\n        });else {\n          try {\n            const result = response.message[3].split('+');\n            context.setState({\n              tbHardware: result\n            });\n            console.log(result);\n          } catch (exception) {\n            console.log('Hardware Parsing Error');\n          }\n        }\n        var ret = [];\n\n        if (context.state.tbSensors != null) {\n          for (var i = 0; i < context.state.tbSensors.length; i++) {\n            ret.push(false);\n          }\n\n          context.setState({\n            sensors: ret\n          });\n        }\n\n        ret = [];\n\n        if (context.state.tbHardware != null) {\n          for (var i = 0; i < context.state.tbHardware.length; i++) {\n            ret.push(false);\n          }\n\n          context.setState({\n            hardware: ret\n          });\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log('Mounting!');\n    this.fetchTBs();\n    this.fetch();\n    this.fetchShib();\n    this.fetchTBRes();\n  }\n\n  buttonAdd() {\n    if (this.state.containers < 20) {\n      this.setState({\n        containers: this.state.containers + 1\n      });\n      const list = [...this.state.container, \"\"];\n      this.setState({\n        container: list\n      });\n    }\n  }\n\n  buttonSub() {\n    if (this.state.containers > 1) {\n      this.setState({\n        containers: this.state.containers - 1\n      });\n      const list = this.state.container;\n      list.pop();\n      this.setState({\n        container: list\n      });\n    }\n  }\n\n  buttonAddY() {\n    if (this.state.containersYaml < 20) {\n      this.setState({\n        containersYaml: this.state.containersYaml + 1\n      });\n      const list = [...this.state.containerYAML, \"\"];\n      this.setState({\n        containerYAML: list\n      });\n    }\n  }\n\n  buttonSubY() {\n    if (this.state.containersYaml > 1) {\n      this.setState({\n        containersYaml: this.state.containersYaml - 1\n      });\n      const list = this.state.containerYAML;\n      list.pop();\n      this.setState({\n        containerYAML: list\n      });\n    }\n  }\n\n  buttonAddV() {\n    if (this.state.volumes < 5) {\n      this.setState({\n        volumes: this.state.volumes + 1\n      });\n      const list = [...this.state.volume, \"\"];\n      this.setState({\n        volume: list\n      });\n    }\n  }\n\n  buttonSubV() {\n    if (this.state.volumes > 1) {\n      this.setState({\n        volumes: this.state.volumes - 1\n      });\n      const list = this.state.volume;\n      list.pop();\n      this.setState({\n        volume: list\n      });\n    }\n  }\n\n  containerUpdate(idx, val) {\n    const list = this.state.container;\n    list[idx] = val;\n    this.setState({\n      container: list\n    });\n  }\n\n  containerUpdateYAML(idx, val) {\n    const list = this.state.containerYAML;\n    list[idx] = val;\n    this.setState({\n      containerYAML: list\n    });\n  }\n\n  volumeUpdate(idx, val) {\n    const list = this.state.volume;\n    list[idx] = val;\n    this.setState({\n      volume: list\n    });\n  }\n\n  getOpts() {\n    var i;\n    var list = [];\n\n    for (i = 0; i < this.state.testbedData.length; ++i) {\n      list.push({\n        label: this.state.testbedData[i].name\n      });\n    }\n\n    return list;\n  }\n\n  containerInput() {\n    const divStyle = {\n      marginTop: \"10px\"\n    };\n\n    const btn_add = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-primary\",\n      style: {\n        width: \"30px\",\n        margin: \"5px\"\n      },\n      onClick: () => this.buttonAdd(),\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 26\n    }, this);\n\n    const btn_sub = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-primary\",\n      style: {\n        width: \"30px\",\n        margin: \"5px\"\n      },\n      onClick: () => this.buttonSub(),\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 26\n    }, this);\n\n    const formInp = [];\n    var i;\n\n    for (i = 0; i < this.state.containers; i++) {\n      const idx = i;\n      formInp.push( /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: \"5px\"\n        },\n        type: \"text\",\n        placeholder: \"Enter Dockerhub Repository Name\",\n        onChange: e => this.containerUpdate(idx, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 26\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: [formInp, btn_add, btn_sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this);\n  }\n\n  containerInputYAML() {\n    const divStyle = {\n      marginTop: \"10px\"\n    };\n\n    const btn_add = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-primary\",\n      style: {\n        width: \"30px\",\n        margin: \"5px\"\n      },\n      onClick: () => this.buttonAddY(),\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 26\n    }, this);\n\n    const btn_sub = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-primary\",\n      style: {\n        width: \"30px\",\n        margin: \"5px\"\n      },\n      onClick: () => this.buttonSubY(),\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 26\n    }, this);\n\n    const formInp = [];\n    var i;\n\n    for (i = 0; i < this.state.containersYaml; i++) {\n      const idx = i;\n      formInp.push( /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: \"5px\"\n        },\n        as: \"textarea\",\n        rows: 5,\n        placeholder: \"Enter Container YAML\",\n        onChange: e => this.containerUpdateYAML(idx, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 26\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: [formInp, btn_add, btn_sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this);\n  }\n\n  selectTB(e) {\n    this.setState({\n      testbedSelect: e.label\n    });\n    console.log('testbedSelect Currently');\n    console.log(this.state.testbedSelect);\n    console.log(e.label);\n    console.log(e);\n    this.fetchTBRes(e.label);\n  }\n\n  updateHardware(i, checked) {\n    var newHardware = this.state.hardware;\n    newHardware[i] = checked;\n    this.setState({\n      hardware: newHardware\n    });\n  }\n\n  getHardware() {\n    var ret = [];\n\n    try {\n      if (this.state.tbHardware.length > 0) {\n        ret.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Specialized Hardware\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this));\n      }\n\n      for (var i = 0; i < this.state.tbHardware.length; ++i) {\n        var name = this.state.tbHardware[i];\n        ret.push( /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: name,\n          type: 'checkbox',\n          id: 'inline-${type}-3',\n          onChange: e => this.updateHardware(i, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this));\n      }\n    } catch (exception) {\n      console.log('error rendering hardware buttons');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ret\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 3\n    }, this);\n  }\n\n  updateSensors(i, checked) {\n    var newSensors = this.state.sensors;\n    newSensors[i] = checked;\n    this.setState({\n      sensors: newSensors\n    });\n  }\n\n  getCPUandRAM() {\n    var ret = [];\n\n    if (this.state.tbRam > 0) {\n      ret.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"RAM: \", this.state.ram, \"GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 12\n      }, this));\n      var max = this.state.tbRam.toString();\n      ret.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"typeinp\",\n          type: \"range\",\n          min: \"1\",\n          max: max,\n          value: \"1\",\n          value: this.state.ram,\n          onChange: e => this.setState({\n            ram: e.target.value\n          }),\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 3\n      }, this));\n    }\n\n    if (this.state.tbCpu > 0) {\n      ret.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CPUs: \", this.state.cpu]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 12\n      }, this));\n      var max = this.state.tbCpu.toString();\n      ret.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"typeinp\",\n          type: \"range\",\n          min: \"0.5\",\n          max: max,\n          defaultValue: \"0.5\",\n          value: this.state.cpu,\n          onChange: e => this.setState({\n            cpu: e.target.value\n          }),\n          step: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 3\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ret\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 3\n    }, this);\n  }\n\n  getSensors() {\n    var ret = [];\n\n    try {\n      if (this.state.tbSensors.length > 0) ret.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sensors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }, this));\n\n      for (var i = 0; i < this.state.tbSensors.length; ++i) {\n        var name = this.state.tbSensors[i];\n        ret.push( /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: name,\n          type: 'checkbox',\n          id: 'inline-${type}-3',\n          onChange: e => this.updateSensors(i, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this));\n      }\n    } catch (exception) {\n      console.log('error rendering sensor buttons');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ret\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 3\n    }, this);\n  }\n\n  volumeInput() {\n    const divStyle = {\n      marginTop: \"10px\"\n    };\n\n    const btn_add = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-primary\",\n      style: {\n        width: \"30px\",\n        margin: \"5px\"\n      },\n      onClick: () => this.buttonAddV(),\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 26\n    }, this);\n\n    const btn_sub = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn-primary\",\n      style: {\n        width: \"30px\",\n        margin: \"5px\"\n      },\n      onClick: () => this.buttonSubV(),\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 26\n    }, this);\n\n    const formInp = [];\n    var i;\n\n    for (i = 0; i < this.state.volumes; i++) {\n      const idx = i;\n      formInp.push( /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          margin: \"5px\"\n        },\n        type: \"text\",\n        placeholder: \"Enter Volume Name\",\n        onChange: e => this.volumeUpdate(idx, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 26\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: [formInp, btn_add, btn_sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        className: \"color-nav\",\n        expand: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: \"Pomerene Lab IoT Testbed Experiment Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"basic-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"basic-navbar-nav\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/\",\n              children: \"Schedule a New Experiment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/delete\",\n              children: \"View My Scheduled Experiments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Schedule a New Experiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Testbed Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.getOpts(),\n              onChange: e => this.selectTB(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(SingleDatePicker, {\n              date: this.state.startdate,\n              onDateChange: startdate => this.setState({\n                startdate\n              }),\n              focused: this.state.focused,\n              onFocusChange: ({\n                focused\n              }) => this.setState({\n                focused\n              }),\n              id: \"startdate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(SingleDatePicker, {\n              date: this.state.enddate,\n              onDateChange: enddate => this.setState({\n                enddate\n              }),\n              focused: this.state.focusedEnd,\n              onFocusChange: ({\n                focused: focusedEnd\n              }) => this.setState({\n                focusedEnd\n              }),\n              id: \"enddate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n              defaultValue: moment('00:00:00', 'HH:mm:ss'),\n              size: \"large\",\n              onChange: e => this.handleChange(e, 'starttime')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"End time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n              defaultValue: moment('00:00:00', 'HH:mm:ss'),\n              size: \"large\",\n              onChange: e => this.handleChange(e, 'endtime')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Experiment Container(s) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), this.containerInput(), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Experiment Container(s) YAML \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 3\n            }, this), this.containerInputYAML(), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Shared Volumes (Optional) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), this.volumeInput(), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"textarea\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Experiment Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                onChange: e => this.setState({\n                  expdescription: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), this.getCPUandRAM(), this.getSensors(), this.getHardware(), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scheduler-container\",\n            children: /*#__PURE__*/_jsxDEV(Scheduler, {\n              events: this.state.calendarData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jayson/Code/IoTLabScratchpad/IoTLabScheduler/Frontend/src/components/App.js"],"names":["React","Component","Fragment","Scheduler","DatePicker","moment","DateRangePicker","SingleDatePicker","DayPickerRangeController","TimePicker","momentPropTypes","PropTypes","Form","FormGroup","Checkbox","Col","Button","Navbar","Nav","NavDropdown","FormControl","$","Select","util","require","cfg","data","App","constructor","props","state","user","startdate","enddate","starttime","format","endtime","focusedEnd","container","containerYAML","volume","test","expdescription","id","calendarData","testbedData","message","status","containers","volumes","containersYaml","testbedSelect","ram","cpu","sensors","hardware","tbRam","tbCpu","tbSensors","tbHardwre","handleSubmit","bind","handleChange","fetch","time","variable","setState","e","event","preventDefault","jsondata","StartDate","endDate","description","testbed","console","log","expStart","expStartTime","expEnd","expEndTime","text","newExp","start_date","end_date","context","ajax","url","domain","port","type","success","msg","alert","error","request","responseText","method","response","resp","key","tb","i","length","tbData","name","color","eventcolor","fetchShib","then","json","jsonData","UID","attributes","values","split","catch","fetchTBs","fetchTBRes","testbedRes","result","exception","tbHardware","ret","push","componentDidMount","buttonAdd","list","buttonSub","pop","buttonAddY","buttonSubY","buttonAddV","buttonSubV","containerUpdate","idx","val","containerUpdateYAML","volumeUpdate","getOpts","label","containerInput","divStyle","marginTop","btn_add","width","margin","btn_sub","formInp","target","value","containerInputYAML","selectTB","updateHardware","checked","newHardware","getHardware","updateSensors","newSensors","getCPUandRAM","max","toString","getSensors","volumeInput","render","focused"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Scheduler from '../components/Scheduler';\nimport 'react-dates/initialize';\nimport DatePicker from \"react-datepicker\"\nimport moment from \"moment\"\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'antd/dist/antd.css'\nimport { TimePicker } from 'antd'\nimport momentPropTypes from 'react-moment-proptypes'\nimport PropTypes from 'prop-types'\nimport {Form, FormGroup, Checkbox, Col, Button, Navbar, Nav, NavDropdown,FormControl} from \"react-bootstrap\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../App.css';\nimport $ from 'jquery';\nimport Select from 'react-select';\n\nconst util = require('util')\nconst cfg = require('../config.json')\n\nconst data = []\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                        user: 'default',\n                        startdate: null,\n                        enddate:  null,\n                        starttime: moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n                        endtime:  moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n                        focusedEnd: false,\n                        container: [\"\"],\n                        containerYAML: [\"\"],\n\t\t\t            volume: [\"\"],\n                        test: 'test',\n                        expdescription: '',\n                        id: 0,\n                        calendarData: [],\n\t\t\t            testbedData: [],\n                        message: 'testtest',\n\t\t\t            status: 'Submitted',\n                        containers: 1,\n                        volumes: 1,\n                        containersYaml: 1,\n                        testbedSelect: 'none',\n                        ram: '1',\n                        cpu: '0.5',\n                        sensors: [],\n                        hardware: [],\n                        tbRam: null,\n                        tbCpu: null,\n                        tbSensors: [],\n\t\t\t            tbHardwre: []\n                    };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.fetch = this.fetch.bind(this);\n    }\n    handleChange(time, variable){\n\tif(variable == 'starttime')\n\t    try {\n            \tthis.setState({starttime: time.format('HH:mm:ss')})\n            } catch(e) {this.setState({starttime: null})}\n\telse if(variable == 'endtime')\n\t    try {\n            \tthis.setState({endtime: time.format('HH:mm:ss')})\n    \t    } catch(e) {this.setState({endtime: null})}\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        var jsondata = {user: this.state.user,\n                    container: this.state.container,\n\t\t    containerYAML: this.state.containerYAML,\n                    volume: this.state.volume,\n                    StartDate: this.state.startdate.format('YYYY-MM-DD'),\n                    endDate: this.state.enddate.format('YYYY-MM-DD'),\n                    starttime: this.state.starttime,\n                    endtime: this.state.endtime,\n                    description: this.state.expdescription,\n                    testbed: this.state.testbedSelect,\n                    ram: this.state.ram,\n                    cpu: this.state.cpu,\n                    sensors: this.state.sensors,\n                    hardware: this.state.hardware,\n                    status: this.state.status\n                }\n\n        console.log(jsondata)\n\n        var expStart = this.state.startdate.format('YYYY-MM-DD')\n        var expStartTime = this.state.starttime\n        var expEnd = this.state.enddate.format('YYYY-MM-DD')\n        var expEndTime = this.state.endtime\n        var text = this.state.container + '\\n' + this.state.expdescription\n        var newExp = {start_date: expStart +' '+ expStartTime, end_date: expEnd+' '+expEndTime,text: text, id: this.state.id}\n\n        console.log(jsondata.endDate)\n\n        //this.setState({calendarData: this.state.calendarData.concat(newExp)})\n        //this.setState({id: this.state.id+1})\n        var context = this;\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.port+'/post',\n            type: 'POST',\n            data: jsondata,\n            success: function(msg) {\n                    var text = 'Experiment Successfully Scheduled from '+context.state.startdate.format('YYYY-MM-DD') + ' ' + context.state.starttime + ' to '+ context.state.enddate.format('YYYY-MM-DD') + ' ' +context.state.endtime;\n                    alert(text)\n                    console.log(msg);\n            },\n            error: function(request, status, error){\n                    alert(request.responseText);\n            }\n        });\n        this.fetch()\n    }\n\n   fetch() {\n        var context = this;\n\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.port+'/api',\n            method: 'GET',\n            data: data,\n            success: function(response) {\n\t\tvar resp = response.message\n\t\tconsole.log('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\n\t\tfor (var key in response.message){\n\t\t\tconsole.log(context.state.testbedData)\n\t\t\t//console.log(context.state.testbedData.length)\n\t\t\tvar tb = response.message[key].testbed\n\t\t\tfor(var i=0; i< context.state.testbedData.length ;++i){\n\t\t\t\tvar tbData = context.state.testbedData[i]\n\t\t\t\tif(tbData.name == response.message[key].testbed){\n\t\t\t\t\tconsole.log('hit')\n\t\t\t\t\tresponse.message[key].color = '#'+tbData.eventcolor\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\tconsole.log(response.message[key])\n\t\tcontext.setState({\n                    calendarData: response.message\n                });\n            }\n        });\n    }\n    fetchShib() {\n        console.log(cfg.domain)\n        console.log('^^^^^^^^^^^^^^^^^')\n\tfetch(cfg.domain+'/Shibboleth.sso/Session')\n  \t\t.then(response => response.json())\n  \t\t.then((jsonData) => {\n    \t\t// jsonData is parsed json object received from url\n    \t     \t\tconsole.log(jsonData)\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$')\n                        const UID = jsonData.attributes[4].values[0].split('@')[0]\n\t\t\tconsole.log(jsonData.attributes[4].values[0].split('@')[0])\n\t\t\tconsole.log(UID)\n\t\t\tthis.setState({ user: UID})\n\t\t\tconsole.log('User')\n\t\t\tconsole.log(this.state.user)\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$')\n   \t\t})\n               .catch((error) => {\n                 // handle your errors here\n                 console.error(error)\n               })\n    }\n    fetchTBs() {\n\tconsole.log('###################')\n\tvar context = this\n        $.ajax({\n            url: 'https://iot.lab.tdai.osu.edu:3001/testbeds',\n            method: 'GET',\n            data: data,\n            success: function(response) {\n                context.setState({\n\t\t\ttestbedData: response.message\n                });\n\t\tconsole.log('TB Response:')\n\t\tconsole.log(response.message)\n\t\tcontext.fetch()\n            }\n        });\n    }\n    fetchTBRes(name) {\n    \tconsole.log('FETCH TB Results')\n\tvar context = this\n        $.ajax({\n            url: 'https://iot.lab.tdai.osu.edu:3001/testbedres?name='+name,\n            method: 'GET',\n            data: data,\n            success: function(response) {\n                context.setState({\n                    testbedRes: response.message\n                });\n\t\tconsole.log(context.state.testbedSelect)\n\t\tconsole.log('TB Response:')\n\t\tconsole.log(response.message)\n\t\tconsole.log(response.message[0])\n\n\t\tcontext.setState({ram: 0})\n\t\tcontext.setState({cpu: 0})\n\n\t\tcontext.setState({tbRam: response.message[0]})\n\t\tcontext.setState({tbCpu: response.message[1]})\n\t\tvar sensors = response.message[2]\n\n\t\tif(sensors == 'None')\n\t\t\tcontext.setState({tbSensors: null})\n\t\telse {\n\t\t\ttry{\n\t\t\t\tconst result = response.message[2].split('+')\n\t\t\t\tcontext.setState({tbSensors: result})\n\t\t\t\tconsole.log(result)\n\t\t\t}catch(exception) {\n\t\t\t\tconsole.log('Sensor Parsing Error')\n\t\t\t}\n\t\t}\n\t\tvar hardware = response.message[3]\n\t\tif(hardware == 'None')\n\t\t\tcontext.setState({tbHardware: null})\n\t\telse {\n\t\t\ttry{\n\t\t\t\tconst result = response.message[3].split('+')\n\t\t\t\tcontext.setState({tbHardware: result})\n\t\t\t\tconsole.log(result)\n\t\t\t} catch(exception) {\n\t\t\t\tconsole.log('Hardware Parsing Error')\n\t\t\t}\n\t\t}\n\t\tvar ret = []\n\t\tif(context.state.tbSensors != null) {\n\t\t\tfor(var i=0; i<context.state.tbSensors.length; i++){\n\t\t\t\tret.push(false)\n\t\t\t}\n\t\t\tcontext.setState({sensors: ret})\n\t\t}\n\t\tret = []\n\t\tif(context.state.tbHardware != null) {\n\t\t\tfor(var i=0; i<context.state.tbHardware.length; i++){\n\t\t\t\tret.push(false)\n\t\t\t}\n\t\t\tcontext.setState({hardware: ret})\n\t\t}\n            }\n        });\n\n    }\n\n    componentDidMount(){\n        console.log('Mounting!')\n        this.fetchTBs();\n\tthis.fetch();\n\tthis.fetchShib();\n\tthis.fetchTBRes();\n    }\n    buttonAdd() {\n        if(this.state.containers < 20) {\n            this.setState({ containers: this.state.containers+1 })\n            const list = [...this.state.container, \"\"]\n            this.setState({ container: list})\n        }\n    }\n    buttonSub() {\n        if(this.state.containers > 1) {\n            this.setState( {containers: this.state.containers-1})\n            const list = this.state.container\n            list.pop()\n            this.setState({ container: list })\n        }\n    }\n    buttonAddY() {\n        if(this.state.containersYaml < 20) {\n            this.setState({ containersYaml: this.state.containersYaml+1 })\n            const list = [...this.state.containerYAML, \"\"]\n            this.setState({ containerYAML: list})\n        }\n    }\n    buttonSubY() {\n        if(this.state.containersYaml > 1) {\n            this.setState( {containersYaml: this.state.containersYaml-1})\n            const list = this.state.containerYAML\n            list.pop()\n            this.setState({ containerYAML: list })\n        }\n    }\n\n    buttonAddV() {\n        if(this.state.volumes < 5) {\n            this.setState({ volumes: this.state.volumes+1 })\n            const list = [...this.state.volume, \"\"]\n            this.setState({ volume: list})\n        }\n    }\n    buttonSubV() {\n        if(this.state.volumes > 1) {\n            this.setState( {volumes: this.state.volumes-1})\n            const list = this.state.volume\n            list.pop()\n            this.setState({ volume: list })\n        }\n    }\n\n    containerUpdate(idx, val){\n        const list = this.state.container\n        list[idx] = val\n        this.setState({ container: list })\n    }\n    containerUpdateYAML(idx, val){\n        const list = this.state.containerYAML\n        list[idx] = val\n        this.setState({ containerYAML: list })\n    }\n\n    volumeUpdate(idx, val){\n        const list = this.state.volume\n        list[idx] = val\n        this.setState( {volume: list} )\n    }\n\n    getOpts(){\n\tvar i\n\tvar list = []\n\tfor (i = 0; i < this.state.testbedData.length; ++i) {\n\t\tlist.push({label: this.state.testbedData[i].name})\n\t}\n        return list;\n    }\n\n    containerInput() {\n        const divStyle = {marginTop: \"10px\"}\n        const btn_add =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonAdd()}> + </button>\n        const btn_sub =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonSub()}> - </button>\n\n        const formInp = []\n        var i;\n        for (i = 0; i< this.state.containers; i++){\n            const idx = i\n            formInp.push(<Form.Control style={{margin: \"5px\"}} type=\"text\" placeholder=\"Enter Dockerhub Repository Name\" onChange={e => this.containerUpdate(idx, e.target.value)}/>\n            )\n        }\n\n        return (\n            <div style={divStyle}>\n            {formInp}\n            {btn_add}\n            {btn_sub}\n\t    </div>\n        )\n    }\n\n  containerInputYAML() {\n        const divStyle = {marginTop: \"10px\"}\n        const btn_add =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonAddY()}> + </button>\n        const btn_sub =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonSubY()}> - </button>\n\n        const formInp = []\n        var i;\n        for (i = 0; i< this.state.containersYaml; i++){\n            const idx = i\n            formInp.push(<Form.Control style={{margin: \"5px\"}} as=\"textarea\" rows={5} placeholder=\"Enter Container YAML\" onChange={e => this.containerUpdateYAML(idx, e.target.value)}/>\n            )\n        }\n\n        return (\n            <div style={divStyle}>\n            {formInp}\n            {btn_add}\n            {btn_sub}\n\t    </div>\n        )\n    }\n\n    selectTB(e){\n\tthis.setState({ testbedSelect: e.label });\n\tconsole.log('testbedSelect Currently');\n        console.log(this.state.testbedSelect);\n\tconsole.log(e.label);\n\tconsole.log(e);\n\tthis.fetchTBRes(e.label);\n    }\n\n    updateHardware(i, checked) {\n\tvar newHardware = this.state.hardware\n\tnewHardware[i] = checked\n\tthis.setState({hardware: newHardware})\n    }\n\n    getHardware(){\n\n\tvar ret = []\n\ttry{\n\t\tif(this.state.tbHardware.length > 0) {\n\t\t\tret.push(<p>Specialized Hardware</p>)\n\t\t}\n\n\t\tfor(var i = 0; i<this.state.tbHardware.length; ++i){\n\t\t\tvar name = this.state.tbHardware[i]\n\t\t\tret.push(<Form.Check inline label= {name} type={'checkbox'} id={'inline-${type}-3'} onChange={e => this.updateHardware(i, e.target.checked)}/>)\n\t\t}\n\t} catch(exception) {\n\t\tconsole.log('error rendering hardware buttons')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t{ret}\n\t\t</div>\n     \t)\n    }\n\n    updateSensors(i, checked) {\n\tvar newSensors = this.state.sensors\n\tnewSensors[i] = checked\n\tthis.setState({sensors: newSensors})\n    }\n\n    getCPUandRAM() {\n\n\tvar ret = []\n\n\tif(this.state.tbRam > 0){\n\t\tret.push(<p>RAM: {this.state.ram}GB</p>)\n\t\tvar max = this.state.tbRam.toString();\n\t\tret.push(\n\t\t<div>\n\t\t<input\n      \t\tid=\"typeinp\"\n      \t\ttype=\"range\"\n      \t\tmin=\"1\" max={max}\n\t\tvalue={\"1\"}\n      \t\tvalue={this.state.ram}\n      \t\tonChange={e => this.setState({ram: e.target.value})}\n      \t\tstep=\"1\"/>\n\t\t</div>\n\t\t)\n\t}\n\n\tif(this.state.tbCpu > 0){\n\t\tret.push(<p>CPUs: {this.state.cpu}</p>)\n\t\tvar max = this.state.tbCpu.toString();\n\t\tret.push(\n\t\t<div>\n\t\t<input\n      \t\tid=\"typeinp\"\n      \t\ttype=\"range\"\n      \t\tmin=\"0.5\" max={max}\n\t\tdefaultValue={\"0.5\"}\n      \t\tvalue={this.state.cpu}\n      \t\tonChange={e => this.setState({cpu: e.target.value})}\n      \t\tstep=\"0.5\"/>\n\t\t</div>\n\t\t)\n\t}\n\n\n\n\treturn (\n\t\t<div>\n\t\t{ret}\n\t\t</div>\n\t)\n    }\n\n    getSensors(){\n\n\tvar ret = []\n\ttry{\n\t\tif(this.state.tbSensors.length > 0)\n\t\t\tret.push(<p>Sensors</p>)\n\n\t\tfor(var i = 0; i<this.state.tbSensors.length; ++i){\n\t\t\tvar name = this.state.tbSensors[i]\n\t\t\tret.push(<Form.Check inline label= {name} type={'checkbox'} id={'inline-${type}-3'} onChange={e => this.updateSensors(i, e.target.checked)}/>)\n\t\t}\n\t} catch(exception) {\n\t\tconsole.log('error rendering sensor buttons')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t{ret}\n\t\t</div>\n     \t)\n    }\n    volumeInput(){\n        const divStyle = {marginTop: \"10px\"}\n        const btn_add =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonAddV()}> + </button>\n        const btn_sub =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonSubV()}> - </button>\n\n        const formInp = []\n        var i;\n        for (i = 0; i< this.state.volumes; i++){\n            const idx = i\n            formInp.push(<Form.Control style={{margin: \"5px\"}} type=\"text\" placeholder=\"Enter Volume Name\" onChange={e => this.volumeUpdate(idx, e.target.value)}/>\n            )\n        }\n\n        return (\n            <div style={divStyle}>\n            {formInp}\n            {btn_add}\n            {btn_sub}\n            </div>\n        )\n\n    }\n\n    render() {\n\treturn (\n            <div>\n                <Navbar className=\"color-nav\" expand='xl'>\n                  <Navbar.Brand href=\"#home\">Pomerene Lab IoT Testbed Experiment Scheduler</Navbar.Brand>\n                  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                  <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                      <Nav.Link href=\"/\">Schedule a New Experiment</Nav.Link>\n                      <Nav.Link href=\"/delete\">View My Scheduled Experiments</Nav.Link>\n                    </Nav>\n                 </Navbar.Collapse>\n                </Navbar>\n                <div class=\"container\">\n                <div>\n                    <h1>Schedule a New Experiment</h1>\n                </div>\n                <br/>\n\n\t\t<div class=\"row\">\n                <div class=\"col-md\">\n\t\t\t<p>Testbed Node</p>\n\t\t\t<Select options={ this.getOpts() } onChange={e => this.selectTB(e)} />\n\t\t\t<br/>\n\n\t\t</div>\n                </div>\n\n                <div class=\"row\">\n                <div class=\"col-md\">\n                    <p>Start Date</p>\n                    <SingleDatePicker\n                    date={this.state.startdate}\n                    onDateChange={(startdate) => this.setState( {startdate})}\n                    focused={this.state.focused}\n                    onFocusChange={({focused}) => this.setState({focused})}\n                    id=\"startdate\"/>\n                </div>\n                <div class=\"col-md\">\n                    <p>End Date</p>\n                    <SingleDatePicker\n                    date={this.state.enddate}\n                    onDateChange={(enddate) => this.setState( {enddate})}\n                    focused={this.state.focusedEnd}\n                    onFocusChange={({focused: focusedEnd}) => this.setState({focusedEnd})}\n                    id=\"enddate\"/>\n                </div>\n                </div>\n\n                <div class=\"row\">\n                <div class=\"col-md\">\n                <p>Start Time</p>\n                <TimePicker defaultValue={moment('00:00:00', 'HH:mm:ss')} size=\"large\" onChange={(e) => this.handleChange(e,'starttime')}/>\n                </div>\n                <div class=\"col-md\">\n                <p>End time</p>\n                <TimePicker defaultValue={moment('00:00:00', 'HH:mm:ss')} size=\"large\" onChange={(e) => this.handleChange(e,'endtime')}/>\n                </div>\n                </div>\n                <div>\n\n                <Form onSubmit={this.handleSubmit}>\n                <p> Experiment Container(s) </p>\n\t\t{this.containerInput()}\n\n\t\t<p> Experiment Container(s) YAML </p>\n\t\t{this.containerInputYAML()}\n\n                <p> Shared Volumes (Optional) </p>\n\t\t{this.volumeInput()}\n\n                <Form.Group controlId=\"textarea\">\n\n                <Form.Label>Experiment Description</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} onChange={e => this.setState({ expdescription: e.target.value })}/>\n                </Form.Group>\n\n\t\t{ this.getCPUandRAM() }\n\n\t\t{ this.getSensors() }\n\n\t\t{ this.getHardware() }\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                </Form>\n                </div>\n\n                <div class=\"row\">\n                <div className='scheduler-container'>\n                    <Scheduler events={this.state.calendarData}/>\n                </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n }\n export default App;\n"]},"metadata":{},"sourceType":"module"}