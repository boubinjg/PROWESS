{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = nChildren;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = require(\"prop-types\");\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction nChildren(n) {\n  var propType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _propTypes.node;\n\n  if (typeof n !== 'number' || isNaN(n) || n < 0) {\n    throw new TypeError('a non-negative number is required');\n  }\n\n  var validator = function nChildrenValidator(props, propName, componentName) {\n    if (propName !== 'children') {\n      return new TypeError(\"\".concat(componentName, \" is using the nChildren validator on a non-children prop\"));\n    }\n\n    var children = props.children;\n\n    var childrenCount = _react[\"default\"].Children.count(children);\n\n    if (childrenCount !== n) {\n      return new RangeError(\"\".concat(componentName, \" expects to receive \").concat(n, \" children, but received \").concat(childrenCount, \" children.\"));\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n\n  validator.isRequired = validator;\n  return (0, _wrapValidator[\"default\"])(validator, \"nChildren:\".concat(n), n);\n}","map":{"version":3,"sources":["../src/nChildren.js"],"names":["propType","node","isNaN","n","validator","rest","propName","children","props","childrenCount","React"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;AAEe,SAAA,SAAA,CAAA,CAAA,EAAuC;AAAA,MAAjBA,QAAiB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAANC,UAAAA,CAAAA,IAAM;;AACpD,MAAI,OAAA,CAAA,KAAA,QAAA,IAAyBC,KAAK,CAA9B,CAA8B,CAA9B,IAAqCC,CAAC,GAA1C,CAAA,EAAgD;AAC9C,UAAM,IAAA,SAAA,CAAN,mCAAM,CAAN;AACD;;AAED,MAAMC,SAAS,GAAG,SAAA,kBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAqE;AACrF,QAAIE,QAAQ,KAAZ,UAAA,EAA6B;AAC3B,aAAO,IAAA,SAAA,CAAA,GAAA,MAAA,CAAA,aAAA,EAAP,0DAAO,CAAA,CAAP;AACD;;AAHoF,QAK7EC,QAL6E,GAKhEC,KALgE,CAAA,QAAA;;AAMrF,QAAMC,aAAa,GAAGC,MAAAA,CAAAA,SAAAA,CAAAA,CAAAA,QAAAA,CAAAA,KAAAA,CAAtB,QAAsBA,CAAtB;;AAEA,QAAID,aAAa,KAAjB,CAAA,EAAyB;AACvB,aAAO,IAAA,UAAA,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,sBAAA,EAAA,MAAA,CAAA,CAAA,EAAA,0BAAA,EAAA,MAAA,CAAA,aAAA,EAAP,YAAO,CAAA,CAAP;AAGD;;AAZoF,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANJ,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAarF,WAAOL,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,aAAAA,EAAAA,MAAAA,CAAP,IAAOA,CAAAA,CAAP;AAbF,GAAA;;AAeAI,EAAAA,SAAS,CAATA,UAAAA,GAAAA,SAAAA;AAEA,SAAO,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAA,aAAA,MAAA,CAAA,CAAA,CAAA,EAAP,CAAO,CAAP;AACD","sourcesContent":["import React from 'react';\nimport { node } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function nChildren(n, propType = node) {\n  if (typeof n !== 'number' || isNaN(n) || n < 0) {\n    throw new TypeError('a non-negative number is required');\n  }\n\n  const validator = function nChildrenValidator(props, propName, componentName, ...rest) {\n    if (propName !== 'children') {\n      return new TypeError(`${componentName} is using the nChildren validator on a non-children prop`);\n    }\n\n    const { children } = props;\n    const childrenCount = React.Children.count(children);\n\n    if (childrenCount !== n) {\n      return new RangeError(\n        `${componentName} expects to receive ${n} children, but received ${childrenCount} children.`,\n      );\n    }\n    return propType(props, propName, componentName, ...rest);\n  };\n  validator.isRequired = validator;\n\n  return wrapValidator(validator, `nChildren:${n}`, n);\n}\n"]},"metadata":{},"sourceType":"script"}