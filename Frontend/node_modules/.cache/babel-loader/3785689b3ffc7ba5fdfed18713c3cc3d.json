{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = childrenOf;\n\nvar _renderableChildren = _interopRequireDefault(require(\"./helpers/renderableChildren\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction validateChildren(propType, children, props) {\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n\n  var error;\n  children.some(function (child) {\n    error = propType.apply(void 0, [_objectSpread(_objectSpread({}, props), {}, {\n      children: child\n    }), 'children'].concat(rest));\n    return error;\n  });\n  return error || null;\n}\n\nfunction childrenOf(propType) {\n  function childrenOfPropType(props, propName, componentName) {\n    if (propName !== 'children') {\n      return new TypeError(\"\".concat(componentName, \" is using the childrenOf validator on non-children prop \\\"\").concat(propName, \"\\\"\"));\n    }\n\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return null;\n    }\n\n    var children = (0, _renderableChildren[\"default\"])(propValue);\n\n    if (children.length === 0) {\n      return null;\n    }\n\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    return validateChildren.apply(void 0, [propType, children, props, componentName].concat(rest));\n  }\n\n  childrenOfPropType.isRequired = function (props, propName, componentName) {\n    if (propName !== 'children') {\n      return new TypeError(\"\".concat(componentName, \" is using the childrenOf validator on non-children prop \\\"\").concat(propName, \"\\\"\"));\n    }\n\n    var children = (0, _renderableChildren[\"default\"])(props[propName]);\n\n    if (children.length === 0) {\n      return new TypeError(\"`\".concat(componentName, \"` requires at least one node of type \").concat(propType.typeName || propType.name));\n    }\n\n    for (var _len3 = arguments.length, rest = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      rest[_key3 - 3] = arguments[_key3];\n    }\n\n    return validateChildren.apply(void 0, [propType, children, props, componentName].concat(rest));\n  };\n\n  return (0, _wrapValidator[\"default\"])(childrenOfPropType, 'childrenOf', propType);\n}","map":{"version":3,"sources":["../src/childrenOf.js"],"names":["rest","children","error","child","propName","propValue","props","validateChildren","childrenOfPropType","propType"],"mappings":"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","sourcesContent":["import renderableChildren from './helpers/renderableChildren';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction validateChildren(propType, children, props, ...rest) {\n  let error;\n  children.some((child) => {\n    error = propType({ ...props, children: child }, 'children', ...rest);\n    return error;\n  });\n\n  return error || null;\n}\n\nexport default function childrenOf(propType) {\n  function childrenOfPropType(props, propName, componentName, ...rest) {\n    if (propName !== 'children') {\n      return new TypeError(`${componentName} is using the childrenOf validator on non-children prop \"${propName}\"`);\n    }\n\n    const { [propName]: propValue } = props;\n\n    if (propValue == null) {\n      return null;\n    }\n    const children = renderableChildren(propValue);\n    if (children.length === 0) {\n      return null;\n    }\n\n    return validateChildren(propType, children, props, componentName, ...rest);\n  }\n\n  childrenOfPropType.isRequired = (props, propName, componentName, ...rest) => {\n    if (propName !== 'children') {\n      return new TypeError(`${componentName} is using the childrenOf validator on non-children prop \"${propName}\"`);\n    }\n\n    const children = renderableChildren(props[propName]);\n    if (children.length === 0) {\n      return new TypeError(`\\`${componentName}\\` requires at least one node of type ${propType.typeName || propType.name}`);\n    }\n\n    return validateChildren(propType, children, props, componentName, ...rest);\n  };\n\n  return wrapValidator(childrenOfPropType, 'childrenOf', propType);\n}\n"]},"metadata":{},"sourceType":"script"}