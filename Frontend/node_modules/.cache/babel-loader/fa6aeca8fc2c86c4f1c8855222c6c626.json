{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getComponentName;\n\nvar _functionPrototype = _interopRequireDefault(require(\"function.prototype.name\"));\n\nvar _reactIs = require(\"react-is\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction getComponentName(Component) {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (typeof Component === 'function') {\n    return Component.displayName || (0, _functionPrototype[\"default\"])(Component);\n  }\n\n  if ((0, _reactIs.isForwardRef)({\n    type: Component,\n    $$typeof: _reactIs.Element\n  })) {\n    return Component.displayName;\n  }\n\n  if ((0, _reactIs.isMemo)(Component)) {\n    return getComponentName(Component.type);\n  }\n\n  return null;\n}","map":{"version":3,"sources":["../../src/helpers/getComponentName.js"],"names":["Component","type","$$typeof","Element","getComponentName"],"mappings":";;;;;;;AAAA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;;;AAEe,SAAA,gBAAA,CAAA,SAAA,EAAqC;AAClD,MAAI,OAAA,SAAA,KAAJ,QAAA,EAAmC;AACjC,WAAA,SAAA;AACD;;AACD,MAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACnC,WAAOA,SAAS,CAATA,WAAAA,IAAyB,CAAA,GAAA,kBAAA,CAAA,SAAA,CAAA,EAAhC,SAAgC,CAAhC;AACD;;AACD,MAAI,CAAA,GAAA,QAAA,CAAA,YAAA,EAAa;AAAEC,IAAAA,IAAI,EAAN,SAAA;AAAmBC,IAAAA,QAAQ,EAAEC,QAAAA,CAAAA;AAA7B,GAAb,CAAJ,EAA0D;AACxD,WAAOH,SAAS,CAAhB,WAAA;AACD;;AACD,MAAI,CAAA,GAAA,QAAA,CAAA,MAAA,EAAJ,SAAI,CAAJ,EAAuB;AACrB,WAAOI,gBAAgB,CAACJ,SAAS,CAAjC,IAAuB,CAAvB;AACD;;AACD,SAAA,IAAA;AACD","sourcesContent":["import getFunctionName from 'function.prototype.name';\nimport { isForwardRef, Element, isMemo } from 'react-is';\n\nexport default function getComponentName(Component) {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n  if (typeof Component === 'function') {\n    return Component.displayName || getFunctionName(Component);\n  }\n  if (isForwardRef({ type: Component, $$typeof: Element })) {\n    return Component.displayName;\n  }\n  if (isMemo(Component)) {\n    return getComponentName(Component.type);\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"script"}