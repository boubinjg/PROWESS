{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _propTypes = require(\"prop-types\");\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction uniqueCountWithSet(arr) {\n  return new Set(arr).size;\n}\n/* istanbul ignore next */\n\n\nfunction uniqueCountLegacy(arr) {\n  var seen = [];\n  arr.forEach(function (item) {\n    if (seen.indexOf(item) === -1) {\n      seen.push(item);\n    }\n  });\n  return seen.length;\n}\n\nvar getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet :\n/* istanbul ignore next */\nuniqueCountLegacy;\n\nfunction requiredUniqueArray(props, propName, componentName) {\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n\n  var result = _propTypes.array.isRequired.apply(_propTypes.array, [props, propName, componentName].concat(rest));\n\n  if (result != null) {\n    return result;\n  }\n\n  var propValue = props[propName];\n  var uniqueCount = getUniqueCount(propValue);\n\n  if (uniqueCount !== propValue.length) {\n    return new RangeError(\"\".concat(componentName, \": values must be unique. \").concat(propValue.length - uniqueCount, \" duplicate values found.\"));\n  }\n\n  return null;\n}\n\nfunction uniqueArray(props, propName) {\n  var propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    rest[_key2 - 2] = arguments[_key2];\n  }\n\n  return requiredUniqueArray.apply(void 0, [props, propName].concat(rest));\n}\n\nuniqueArray.isRequired = requiredUniqueArray;\n\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(uniqueArray, 'uniqueArray');\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/uniqueArray.js"],"names":["seen","arr","getUniqueCount","rest","result","array","propValue","props","uniqueCount","requiredUniqueArray","uniqueArray"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;AAEA,SAAA,kBAAA,CAAA,GAAA,EAAiC;AAAE,SAAO,IAAA,GAAA,CAAA,GAAA,EAAP,IAAA;AAA2B;AAC9D;;;AACA,SAAA,iBAAA,CAAA,GAAA,EAAgC;AAC9B,MAAMA,IAAI,GAAV,EAAA;AACAC,EAAAA,GAAG,CAAHA,OAAAA,CAAY,UAAA,IAAA,EAAU;AACpB,QAAID,IAAI,CAAJA,OAAAA,CAAAA,IAAAA,MAAuB,CAA3B,CAAA,EAA+B;AAC7BA,MAAAA,IAAI,CAAJA,IAAAA,CAAAA,IAAAA;AACD;AAHHC,GAAAA;AAKA,SAAOD,IAAI,CAAX,MAAA;AACD;;AAED,IAAME,cAAc,GAAG,OAAA,GAAA,KAAA,UAAA,GAAA,kBAAA;AAAiD;AAAxE,iBAAA;;AAEA,SAAA,mBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAsE;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,IAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AACpE,MAAMC,MAAM,GAAGC,UAAAA,CAAAA,KAAAA,CAAAA,UAAAA,CAAAA,KAAAA,CAAAA,UAAAA,CAAAA,KAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,aAAAA,EAAAA,MAAAA,CAAf,IAAeA,CAAAA,CAAf;;AACA,MAAID,MAAM,IAAV,IAAA,EAAoB;AAClB,WAAA,MAAA;AACD;;AAJmE,MAMhDE,SANgD,GAMlCC,KANkC,CAAA,QAAA,CAAA;AAOpE,MAAMC,WAAW,GAAGN,cAAc,CAAlC,SAAkC,CAAlC;;AACA,MAAIM,WAAW,KAAKF,SAAS,CAA7B,MAAA,EAAsC;AACpC,WAAO,IAAA,UAAA,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,2BAAA,EAAA,MAAA,CAA2DA,SAAS,CAATA,MAAAA,GAA3D,WAAA,EAAP,0BAAO,CAAA,CAAP;AACD;;AACD,SAAA,IAAA;AACD;;AAED,SAAA,WAAA,CAAA,KAAA,EAAA,QAAA,EAA+C;AAAA,MACzBA,SADyB,GACXC,KADW,CAAA,QAAA,CAAA;;AAE7C,MAAID,SAAS,IAAb,IAAA,EAAuB;AACrB,WAAA,IAAA;AACD;;AAJ4C,OAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAANH,IAAM,GAAA,IAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAANA,IAAAA,IAAM,CAAA,KAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,KAAA,CAANA;AAAM;;AAM7C,SAAOM,mBAAmB,CAAnBA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,MAAAA,CAAP,IAAOA,CAAAA,CAAP;AACD;;AACDC,WAAW,CAAXA,UAAAA,GAAAA,mBAAAA;;eAEe,SAAA,QAAA,GAAA;AAAA,SAAM,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAN,aAAM,CAAN","sourcesContent":["import { array } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction uniqueCountWithSet(arr) { return new Set(arr).size; }\n/* istanbul ignore next */\nfunction uniqueCountLegacy(arr) {\n  const seen = [];\n  arr.forEach((item) => {\n    if (seen.indexOf(item) === -1) {\n      seen.push(item);\n    }\n  });\n  return seen.length;\n}\n\nconst getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet : /* istanbul ignore next */ uniqueCountLegacy;\n\nfunction requiredUniqueArray(props, propName, componentName, ...rest) {\n  const result = array.isRequired(props, propName, componentName, ...rest);\n  if (result != null) {\n    return result;\n  }\n\n  const { [propName]: propValue } = props;\n  const uniqueCount = getUniqueCount(propValue);\n  if (uniqueCount !== propValue.length) {\n    return new RangeError(`${componentName}: values must be unique. ${propValue.length - uniqueCount} duplicate values found.`);\n  }\n  return null;\n}\n\nfunction uniqueArray(props, propName, ...rest) {\n  const { [propName]: propValue } = props;\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredUniqueArray(props, propName, ...rest);\n}\nuniqueArray.isRequired = requiredUniqueArray;\n\nexport default () => wrapValidator(uniqueArray, 'uniqueArray');\n"]},"metadata":{},"sourceType":"script"}