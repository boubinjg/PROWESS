{"ast":null,"code":"'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n  if (!Object.assign) {\n    return false;\n  }\n  /*\n   * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n   * note: this does not detect the bug unless there's 20 characters\n   */\n\n\n  var str = 'abcdefghijklmnopqrst';\n  var letters = str.split('');\n  var map = {};\n\n  for (var i = 0; i < letters.length; ++i) {\n    map[letters[i]] = letters[i];\n  }\n\n  var obj = Object.assign({}, map);\n  var actual = '';\n\n  for (var k in obj) {\n    actual += k;\n  }\n\n  return str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n  if (!Object.assign || !Object.preventExtensions) {\n    return false;\n  }\n  /*\n   * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n   * which is 72% slower than our shim, and Firefox 40's native implementation.\n   */\n\n\n  var thrower = Object.preventExtensions({\n    1: 2\n  });\n\n  try {\n    Object.assign(thrower, 'xy');\n  } catch (e) {\n    return thrower[1] === 'y';\n  }\n\n  return false;\n};\n\nmodule.exports = function getPolyfill() {\n  if (!Object.assign) {\n    return implementation;\n  }\n\n  if (lacksProperEnumerationOrder()) {\n    return implementation;\n  }\n\n  if (assignHasPendingExceptions()) {\n    return implementation;\n  }\n\n  return Object.assign;\n};","map":{"version":3,"sources":["/home/boubin.2/PROWESS/Frontend/node_modules/object.assign/polyfill.js"],"names":["implementation","require","lacksProperEnumerationOrder","Object","assign","str","letters","split","map","i","length","obj","actual","k","assignHasPendingExceptions","preventExtensions","thrower","e","module","exports","getPolyfill"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIC,2BAA2B,GAAG,YAAY;AAC7C,MAAI,CAACC,MAAM,CAACC,MAAZ,EAAoB;AACnB,WAAO,KAAP;AACA;AACD;AACD;AACA;AACA;;;AACC,MAAIC,GAAG,GAAG,sBAAV;AACA,MAAIC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,EAAV,CAAd;AACA,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACxCD,IAAAA,GAAG,CAACF,OAAO,CAACG,CAAD,CAAR,CAAH,GAAkBH,OAAO,CAACG,CAAD,CAAzB;AACA;;AACD,MAAIE,GAAG,GAAGR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBI,GAAlB,CAAV;AACA,MAAII,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAT,IAAcF,GAAd,EAAmB;AAClBC,IAAAA,MAAM,IAAIC,CAAV;AACA;;AACD,SAAOR,GAAG,KAAKO,MAAf;AACA,CApBD;;AAsBA,IAAIE,0BAA0B,GAAG,YAAY;AAC5C,MAAI,CAACX,MAAM,CAACC,MAAR,IAAkB,CAACD,MAAM,CAACY,iBAA9B,EAAiD;AAChD,WAAO,KAAP;AACA;AACD;AACD;AACA;AACA;;;AACC,MAAIC,OAAO,GAAGb,MAAM,CAACY,iBAAP,CAAyB;AAAE,OAAG;AAAL,GAAzB,CAAd;;AACA,MAAI;AACHZ,IAAAA,MAAM,CAACC,MAAP,CAAcY,OAAd,EAAuB,IAAvB;AACA,GAFD,CAEE,OAAOC,CAAP,EAAU;AACX,WAAOD,OAAO,CAAC,CAAD,CAAP,KAAe,GAAtB;AACA;;AACD,SAAO,KAAP;AACA,CAfD;;AAiBAE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,GAAuB;AACvC,MAAI,CAACjB,MAAM,CAACC,MAAZ,EAAoB;AACnB,WAAOJ,cAAP;AACA;;AACD,MAAIE,2BAA2B,EAA/B,EAAmC;AAClC,WAAOF,cAAP;AACA;;AACD,MAAIc,0BAA0B,EAA9B,EAAkC;AACjC,WAAOd,cAAP;AACA;;AACD,SAAOG,MAAM,CAACC,MAAd;AACA,CAXD","sourcesContent":["'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n"]},"metadata":{},"sourceType":"script"}