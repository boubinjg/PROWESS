{"ast":null,"code":"'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n};\n\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\n\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n  var clone = optionsArgument && optionsArgument.clone === true;\n  return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n  var destination = target.slice();\n  source.forEach(function (e, i) {\n    if (typeof destination[i] === 'undefined') {\n      destination[i] = cloneIfNecessary(e, optionsArgument);\n    } else if (isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, optionsArgument);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(cloneIfNecessary(e, optionsArgument));\n    }\n  });\n  return destination;\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n  var destination = {};\n\n  if (isMergeableObject(target)) {\n    Object.keys(target).forEach(function (key) {\n      destination[key] = cloneIfNecessary(target[key], optionsArgument);\n    });\n  }\n\n  Object.keys(source).forEach(function (key) {\n    if (!isMergeableObject(source[key]) || !target[key]) {\n      destination[key] = cloneIfNecessary(source[key], optionsArgument);\n    } else {\n      destination[key] = deepmerge(target[key], source[key], optionsArgument);\n    }\n  });\n  return destination;\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var options = optionsArgument || {\n    arrayMerge: defaultArrayMerge\n  };\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneIfNecessary(source, optionsArgument);\n  } else if (sourceIsArray) {\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n    return arrayMerge(target, source, optionsArgument);\n  } else {\n    return mergeObject(target, source, optionsArgument);\n  }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n  if (!Array.isArray(array) || array.length < 2) {\n    throw new Error('first argument should be an array with at least two elements');\n  } // we are sure there are at least 2 values, so it is safe to have no initial value\n\n\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, optionsArgument);\n  });\n};\n\nvar deepmerge_1 = deepmerge;\nmodule.exports = deepmerge_1;","map":{"version":3,"sources":["/home/boubin.2/PROWESS/Frontend/node_modules/react-with-direction/node_modules/deepmerge/dist/cjs.js"],"names":["isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneIfNecessary","optionsArgument","clone","deepmerge","defaultArrayMerge","target","source","destination","slice","forEach","e","i","indexOf","push","mergeObject","keys","key","sourceIsArray","targetIsArray","options","arrayMerge","sourceAndTargetTypesMatch","all","deepmergeAll","array","length","Error","reduce","prev","next","deepmerge_1","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"]},"metadata":{},"sourceType":"script"}