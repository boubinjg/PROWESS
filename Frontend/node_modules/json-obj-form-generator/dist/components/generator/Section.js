"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getValue = exports.getErrors = exports.Section = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactstrap = require("reactstrap");

var _Container = _interopRequireDefault(require("./Container"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Section = /*#__PURE__*/function (_Component) {
  _inherits(Section, _Component);

  var _super = _createSuper(Section);

  function Section() {
    var _this;

    _classCallCheck(this, Section);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onSubChange", function (unique_id, value) {
      var prevVal = this.props.value;
      var prevErr = this.props.errors;
      var invalid = this.props.invalidCheck(prevErr);

      if (value === null || value === undefined) {
        delete prevVal[unique_id];
        prevErr[unique_id] = {
          invalid: false
        };
      } else {
        prevVal[unique_id] = value["value"];
        prevErr[unique_id] = value["errors"];
      }

      if (this.props.onChange) {
        this.props.onChange(this.props.uid, {
          value: prevVal,
          errors: prevErr
        }, !invalid);
      }

      if (this.props.isValid) {
        this.props.isValid(!invalid);
      }
    }.bind(_assertThisInitialized(_this)));

    return _this;
  }

  _createClass(Section, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var genaliaseskeys = Object.keys(this.props.generator_aliases);
      return /*#__PURE__*/_react.default.createElement(_reactstrap.Card, {
        className: "jofgen-sec-card"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.CardBody, null, /*#__PURE__*/_react.default.createElement("b", {
        className: "jofgen-sec-title"
      }, this.props.name === undefined ? this.props.uid : this.props.name), this.props.desc !== undefined ? /*#__PURE__*/_react.default.createElement("div", {
        className: "jofgen-sec-desc text-muted"
      }, this.props.desc) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null), /*#__PURE__*/_react.default.createElement("div", {
        className: "jofgen-sec-body"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Row, null, this.props.sub !== undefined ? this.props.sub.map(function (sub_item, sub_idx) {
        var Tag;
        var gen;

        if (genaliaseskeys.includes(sub_item.type)) {
          gen = _this2.props.generator_aliases[sub_item.type];
        } else {
          gen = _this2.props.generator_aliases.err;
        }

        Tag = gen.tag;

        if (gen.useContainer) {
          return /*#__PURE__*/_react.default.createElement(_react.Fragment, {
            key: sub_idx
          }, /*#__PURE__*/_react.default.createElement(_Container.default, _extends({}, sub_item, {
            sm: sub_item.sm !== undefined && sub_item.sm !== null && ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"].includes(sub_item.sm) ? sub_item.sm : _this2.props.sm !== undefined && _this2.props.sm !== null && ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"].includes(_this2.props.sm) ? _this2.props.sm : "12",
            req_indicator: _this2.props.req_indicator
          }), /*#__PURE__*/_react.default.createElement(Tag, _extends({}, sub_item, {
            mode: _this2.props.mode,
            errors: _this2.props.errors[sub_item.uid],
            value: _this2.props.value[sub_item.uid],
            req_indicator: _this2.props.req_indicator,
            className: _this2.props.className,
            size: _this2.props.size,
            jkey: _this2.props.jkey,
            invalid: false,
            sm: _this2.props.sm,
            onChange: _this2.onSubChange,
            isValid: function isValid() {},
            invalidCheck: _this2.props.invalidCheck,
            generator_aliases: _this2.props.generator_aliases
          }))));
        } else {
          return /*#__PURE__*/_react.default.createElement(_react.Fragment, {
            key: sub_idx
          }, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
            sm: sub_item.sm !== undefined && sub_item.sm !== null && ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"].includes(sub_item.sm) ? sub_item.sm : _this2.props.sm !== undefined && _this2.props.sm !== null && ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"].includes(_this2.props.sm) ? _this2.props.sm : "12"
          }, /*#__PURE__*/_react.default.createElement(Tag, _extends({}, sub_item, {
            mode: _this2.props.mode,
            errors: _this2.props.errors[sub_item.uid],
            value: _this2.props.value[sub_item.uid],
            className: _this2.props.className,
            req_indicator: _this2.props.req_indicator,
            size: _this2.props.size,
            jkey: _this2.props.jkey,
            invalid: false,
            sm: _this2.props.sm,
            onChange: _this2.onSubChange,
            isValid: function isValid() {},
            invalidCheck: _this2.props.invalidCheck,
            generator_aliases: _this2.props.generator_aliases
          }))));
        }
      }) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null)))));
    }
  }]);

  return Section;
}(_react.Component);

exports.Section = Section;
Section.propTypes = {
  uid: _propTypes.default.string.isRequired,
  design: _propTypes.default.bool,
  sub: _propTypes.default.bool
};
Section.defaultProps = {
  uid: "",
  className: "",
  size: "sm"
};

var getErrors = function getErrors() {
  return {
    invalid: false
  };
};

exports.getErrors = getErrors;

var getValue = function getValue(e) {
  return e;
};

exports.getValue = getValue;