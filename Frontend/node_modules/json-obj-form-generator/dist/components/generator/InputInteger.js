"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getValue = exports.getErrors = exports.InputInteger = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactstrap = require("reactstrap");

var _propTypes2 = require("./propTypes");

var _icons = require("./icons");

var _validators = require("./validators");

var _Clearer = _interopRequireDefault(require("./Clearer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var InputInteger = /*#__PURE__*/function (_Component) {
  _inherits(InputInteger, _Component);

  var _super = _createSuper(InputInteger);

  function InputInteger() {
    var _this;

    _classCallCheck(this, InputInteger);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onChange", function (e) {
      var val = e.target.value;
      var err = getErrors(e.target.value, this.props);
      var value = {
        value: err.err_type && val !== null && val.length > 0 ? (0, _validators.filterInt)(String(val)) : val,
        errors: err
      };

      if (this.props.onChange) {
        this.props.onChange(this.props.uid, value, !value.errors.invalid);
      }
    }.bind(_assertThisInitialized(_this)));

    return _this;
  }

  _createClass(InputInteger, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_Clearer.default, _extends({}, this.props, {
        clear: this.onChange
      }), /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "value",
        type: "text",
        value: this.props.value !== null ? this.props.value : "",
        onChange: this.onChange,
        placeholder: this.props.placeholder,
        invalid: this.props.invalid || this.props.errors.invalid,
        bsSize: this.props.size
      })), /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        hidden: this.props.errors.warn_def,
        color: "info",
        className: "jofgen-warning jofgen-warning-int"
      }, this.props.warn_def + ' ' + this.props.default), /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        hidden: this.props.errors.err_type,
        color: "danger",
        className: "jofgen-warning jofgen-warning-int"
      }, this.props.err_type), /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        hidden: this.props.errors.err_req,
        color: "danger",
        className: "jofgen-warning jofgen-warning-int"
      }, this.props.err_req), /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        hidden: this.props.errors.err_min,
        color: "danger",
        className: "jofgen-warning jofgen-warning-int"
      }, this.props.err_min), /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        hidden: this.props.errors.err_max,
        color: "danger",
        className: "jofgen-warning jofgen-warning-int"
      }, this.props.err_max), /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        hidden: this.props.errors.err_inf,
        color: "danger",
        className: "jofgen-warning jofgen-warning-int"
      }, this.props.err_inf));
    }
  }]);

  return InputInteger;
}(_react.Component);

exports.InputInteger = InputInteger;
InputInteger.propTypes = {
  uid: _propTypes.default.string,
  name: _propTypes.default.string,
  required: _propTypes.default.bool,
  value: function value(props, propName, componentName) {
    if (props[propName] !== undefined) {
      if (!(0, _validators.intValid)(String(props[propName]))) {
        return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Value must be integer."));
      }
    }
  },
  default: function _default(props, propName, componentName) {
    if (props[propName] !== undefined) {
      if (!(0, _validators.intValid)(String(props[propName]))) {
        return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Value must be integer."));
      }
    }
  },
  min: function min(props, propName, componentName) {
    if (props[propName] !== undefined) {
      if (!(0, _validators.intValid)(String(props[propName]))) {
        return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Value must be integer."));
      }

      if (props["max"] !== undefined && props["max"] < props[propName]) {
        return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Value must be lower than max."));
      }
    }
  },
  max: function max(props, propName, componentName) {
    if (props[propName] !== undefined) {
      if (!(0, _validators.intValid)(String(props[propName]))) {
        return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Value must be integer."));
      }

      if (props["min"] !== undefined && props["min"] > props[propName]) {
        return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(componentName, "`. Value must be greater than min."));
      }
    }
  },
  errors: _propTypes.default.object,
  err_req: _propTypes.default.string,
  err_min: _propTypes.default.string,
  err_max: _propTypes.default.string,
  err_inf: _propTypes.default.string,
  err_type: _propTypes.default.string,
  warn_def: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  tip: _propTypes.default.string,
  sm: _propTypes.default.oneOf(["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]),
  size: _propTypes.default.string,
  onChange: _propTypes.default.func,
  invalid: _propTypes.default.bool,
  invalidUid: _propTypes.default.bool,
  translation: _propTypes.default.shape(_propTypes2.translationUid),

  /* aditional */
  jkey: _propTypes.default.shape(_propTypes2.keyPropType),
  icon: _propTypes.default.any
};
InputInteger.defaultProps = {
  uid: "",
  className: "",
  invalid: false,
  value: null,
  err_req: "Value is mandatory.",
  warn_def: "Value is not filled. Default value:",
  err_min: "Value is lower than minimum enabled value.",
  err_max: "Value is higher than maximal enabled value.",
  err_inf: "Value must be finite",
  err_type: "Invalid type of value. Value is not integer.",
  translation: _propTypes2.Default_translationUid,
  size: "sm",
  jkey: _propTypes2.Default_keyPropType,
  sm: "12",
  icon: _icons.info
};

var getErrors = function getErrors(e, props) {
  var new_value = getValue(e, props);

  if (new_value !== undefined && new_value !== null) {
    var filter_new_value = (0, _validators.filterInt)(new_value);
    var min = String(props.min);
    var max = String(props.max);
    var new_value_valid = (0, _validators.intValid)(new_value);
    var w_d = !(e.length === 0 && props.default !== undefined && props.default !== null && props.required);
    var e_t = new_value_valid || String(new_value).length === 0 && props.required;
    var e_r = String(new_value).length > 0 && props.required || !props.required;
    var e_ml = !(0, _validators.intValid)(min) || !new_value_valid || filter_new_value >= (0, _validators.filterInt)(min);
    var e_mxl = !(0, _validators.intValid)(max) || !new_value_valid || filter_new_value <= (0, _validators.filterInt)(max);
    var e_i = String(new_value).length === 0 || !new_value_valid || new_value_valid && isFinite(filter_new_value);
    return {
      warn_def: w_d,
      err_req: e_r,
      err_type: e_t,
      err_min: e_ml,
      err_max: e_mxl,
      err_inf: e_i,
      invalid: !(e_t && e_r && e_ml && e_mxl && e_i)
    };
  } else {
    return {
      warn_def: true,
      err_req: true,
      err_type: true,
      err_min: true,
      err_max: true,
      err_inf: true,
      invalid: false
    };
  }
};

exports.getErrors = getErrors;

var getValue = function getValue(e, props) {
  if (props.required) {
    if (e === undefined || e === null || e.length === 0) {
      if (props.default === null || props.default === undefined) {
        return "";
      }

      return props.default;
    } else {
      return (0, _validators.intValid)(e) ? (0, _validators.filterInt)(e) : e;
    }
  } else {
    if (e === undefined || e === null) {
      return null;
    } else {
      return (0, _validators.intValid)(e) ? (0, _validators.filterInt)(e) : e;
    }
  }
};

exports.getValue = getValue;