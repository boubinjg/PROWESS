"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Default_ListCustomTranslation = exports.Default_ListTranslation = exports.Default_ListFloatTranslation = exports.Default_ListIntegerTranslation = exports.Default_IntTranslation = exports.Default_FloatTranslation = exports.Default_ParagraphTranslation = exports.Default_PackTranslation = exports.Default_SecTranslation = exports.Default_ListStringTranslation = exports.Default_StringTranslation = exports.Default_CustomTranslation = exports.Default_BoolTranslation = exports.Default_ColorTranslation = exports.ListCustomTranslationPropType = exports.FloatTranslationPropType = exports.IntegerListTranslationPropType = exports.IntegerTranslationPropType = exports.PackTranslationPropType = exports.SecTranslationPropType = exports.ParagraphTranslationPropType = exports.CustomTranslationPropType = exports.ListIntegerTranslationPropType = exports.ListFloatTranslationPropType = exports.ListStringTranslationPropType = exports.StringTranslationPropType = exports.BoolTranslationPropType = exports.BasicTypeTranslationPropType = exports.FNumericErrPropType = exports.NumericErrPropType = exports.Default_keyPropType = exports.keyPropType = exports.InputWithPopUpPropType = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InputWithPopUpPropType = {
  name: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  placeHolder: _propTypes.default.string.isRequired
};
exports.InputWithPopUpPropType = InputWithPopUpPropType;
var keyPropType = {
  prefix: _propTypes.default.string.isRequired,
  sufix: _propTypes.default.string.isRequired
};
exports.keyPropType = keyPropType;
var Default_keyPropType = {
  prefix: "jofgen-D-",
  sufix: ""
};
/* 
   ------------------------------------------------------
   ------- Designer error prop types definition ---------
   ------------------------------------------------------
    - uid - unique id
    - min - variable < min
    - max - variable > max
    - range - variable out of range
    - inf - variable is infinite
    - type - variable type is invalid 
    - prec - invalid precision
*/

exports.Default_keyPropType = Default_keyPropType;
var NumericErrPropType = {
  uid: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  type: _propTypes.default.string.isRequired,
  inf: _propTypes.default.string.isRequired
};
exports.NumericErrPropType = NumericErrPropType;
var FNumericErrPropType = {
  uid: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  type: _propTypes.default.string.isRequired,
  inf: _propTypes.default.string.isRequired,
  prec: _propTypes.default.string.isRequired,
  int: _propTypes.default.string.isRequired
};
/* 
   ------------------------------------------------------
   ----- Designer translation prop types definition -----
   ------------------------------------------------------
*/

exports.FNumericErrPropType = FNumericErrPropType;
var BasicTypeTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    type: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_type: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.BasicTypeTranslationPropType = BasicTypeTranslationPropType;
var BoolTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_default: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.BoolTranslationPropType = BoolTranslationPropType;
var StringTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  minLength: _propTypes.default.string.isRequired,
  is_password: _propTypes.default.string.isRequired,
  maxLength: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    minLength: _propTypes.default.string.isRequired,
    maxLength: _propTypes.default.string.isRequired,
    zeroLength: _propTypes.default.string.isRequired,
    shortLength: _propTypes.default.string.isRequired,
    longLength: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minlength: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxlength: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.StringTranslationPropType = StringTranslationPropType;
var ListStringTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  minLength: _propTypes.default.string.isRequired,
  maxLength: _propTypes.default.string.isRequired,
  minNo: _propTypes.default.string.isRequired,
  maxNo: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    minLength: _propTypes.default.string.isRequired,
    maxLength: _propTypes.default.string.isRequired,
    minNo: _propTypes.default.string.isRequired,
    maxNo: _propTypes.default.string.isRequired,
    zeroLength: _propTypes.default.string.isRequired,
    shortLength: _propTypes.default.string.isRequired,
    longLength: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minlength: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxlength: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    empty: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.ListStringTranslationPropType = ListStringTranslationPropType;
var ListFloatTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  minNo: _propTypes.default.string.isRequired,
  maxNo: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    min: _propTypes.default.string.isRequired,
    max: _propTypes.default.string.isRequired,
    zeroNo: _propTypes.default.string.isRequired,
    minNo: _propTypes.default.string.isRequired,
    maxNo: _propTypes.default.string.isRequired,
    type: _propTypes.default.string.isRequired,
    typeNo: _propTypes.default.string.isRequired,
    v_min: _propTypes.default.string.isRequired,
    v_max: _propTypes.default.string.isRequired,
    v_minNo: _propTypes.default.string.isRequired,
    v_maxNo: _propTypes.default.string.isRequired,
    v_type: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_min: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_max: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.ListFloatTranslationPropType = ListFloatTranslationPropType;
var ListIntegerTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  minNo: _propTypes.default.string.isRequired,
  maxNo: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    min: _propTypes.default.string.isRequired,
    max: _propTypes.default.string.isRequired,
    zeroNo: _propTypes.default.string.isRequired,
    minNo: _propTypes.default.string.isRequired,
    maxNo: _propTypes.default.string.isRequired,
    type: _propTypes.default.string.isRequired,
    typeNo: _propTypes.default.string.isRequired,
    v_min: _propTypes.default.string.isRequired,
    v_max: _propTypes.default.string.isRequired,
    v_minNo: _propTypes.default.string.isRequired,
    v_maxNo: _propTypes.default.string.isRequired,
    v_type: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_min: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_max: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.ListIntegerTranslationPropType = ListIntegerTranslationPropType;
var CustomTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  regex: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    type: _propTypes.default.string.isRequired,
    rgx: _propTypes.default.string.isRequired,
    norgx: _propTypes.default.string.isRequired,
    rgxv: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_type: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.CustomTranslationPropType = CustomTranslationPropType;
var ParagraphTranslationPropType = {
  name: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  text: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    empty: _propTypes.default.string.isRequired
  }).isRequired
};
exports.ParagraphTranslationPropType = ParagraphTranslationPropType;
var SecTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  columns: _propTypes.default.string.isRequired,
  desc: _propTypes.default.string.isRequired,
  smallWidthAlert: _propTypes.default.string.isRequired,
  sub: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired
  }),
  sections: _propTypes.default.string.isRequired
};
exports.SecTranslationPropType = SecTranslationPropType;
var PackTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  columns: _propTypes.default.string.isRequired,
  smallWidthAlert: _propTypes.default.string.isRequired,
  mode: _propTypes.default.string.isRequired,
  mode_list: _propTypes.default.string.isRequired,
  mode_stack: _propTypes.default.string.isRequired,
  mode_unlisted: _propTypes.default.string.isRequired,
  sub: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired
  }),
  addSection: _propTypes.default.string.isRequired,
  sections: _propTypes.default.string.isRequired
};
exports.PackTranslationPropType = PackTranslationPropType;
var IntegerTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape(NumericErrPropType).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_min: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_max: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_type: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_inf: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.IntegerTranslationPropType = IntegerTranslationPropType;
var IntegerListTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  minNo: _propTypes.default.string.isRequired,
  maxNo: _propTypes.default.string.isRequired,
  type: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    min: _propTypes.default.string.isRequired,
    max: _propTypes.default.string.isRequired,
    type: _propTypes.default.string.isRequired,
    inf: _propTypes.default.string.isRequired,
    minNo: _propTypes.default.string.isRequired,
    maxNo: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_min: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_max: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_type: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_inf: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.IntegerListTranslationPropType = IntegerListTranslationPropType;
var FloatTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  min: _propTypes.default.string.isRequired,
  max: _propTypes.default.string.isRequired,
  precision: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape(FNumericErrPropType).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_min: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_max: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_type: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_inf: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_prec: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
exports.FloatTranslationPropType = FloatTranslationPropType;
var ListCustomTranslationPropType = {
  uid: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  name: _propTypes.default.string.isRequired,
  required: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  default: _propTypes.default.string.isRequired,
  minLength: _propTypes.default.string.isRequired,
  maxLength: _propTypes.default.string.isRequired,
  regex: _propTypes.default.string.isRequired,
  minNo: _propTypes.default.string.isRequired,
  maxNo: _propTypes.default.string.isRequired,
  placeholder: _propTypes.default.string.isRequired,
  tip: _propTypes.default.string.isRequired,
  messages: _propTypes.default.shape({
    uid: _propTypes.default.string.isRequired,
    minLength: _propTypes.default.string.isRequired,
    maxLength: _propTypes.default.string.isRequired,
    minNo: _propTypes.default.string.isRequired,
    maxNo: _propTypes.default.string.isRequired,
    zeroLength: _propTypes.default.string.isRequired,
    shortLength: _propTypes.default.string.isRequired,
    longLength: _propTypes.default.string.isRequired,
    type: _propTypes.default.string.isRequired,
    rgx: _propTypes.default.string.isRequired,
    noregex: _propTypes.default.string.isRequired,
    rgxv: _propTypes.default.string.isRequired
  }).isRequired,
  errors: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    err_type: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_req: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minlength: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxlength: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_minNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    err_maxNo: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired,
  warnings: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    alert: _propTypes.default.string.isRequired,
    warn_def: _propTypes.default.shape(InputWithPopUpPropType).isRequired,
    empty: _propTypes.default.shape(InputWithPopUpPropType).isRequired
  }).isRequired
};
/*export const CustomTranslationPropType = PropTypes.shape({
    name: PropTypes.string.isRequired,
    mandatory: PropTypes.string.isRequired,
    value: PropTypes.string.isRequired,
    default: PropTypes.string.isRequired
})


/* 
   ------------------------------------------------------
   -------- Designer translation default props ----------
   ------------------------------------------------------
*/

exports.ListCustomTranslationPropType = ListCustomTranslationPropType;
var Default_ColorTranslation = {
  uid: "Unique Id",
  title: "Input: Color",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    type: "Invalid value type"
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_req: {
      name: "Required value",
      tip: "This error will be shown when variable is marked as mandatory and value was not set.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_ColorTranslation = Default_ColorTranslation;
var Default_BoolTranslation = {
  uid: "Unique Id",
  title: "Input: Boolean",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Require check",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required"
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_default: {
      name: "Required and value is False",
      tip: "This error will be shown when parameter is required and value is not equal true.",
      placeHolder: ""
    }
  }
};
exports.Default_BoolTranslation = Default_BoolTranslation;
var Default_CustomTranslation = {
  uid: "Unique Id",
  title: "Input: Custom validation",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  is_password: "Is password",
  regex: "Validation expresion",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    type: "Invalid value type",
    rgx: "Invalid regular expression (validation expression)",
    norgx: "Regular expression (validation expression) is undefined. In this case is input validated exactly like string.\n For better performance we recommend you to use string.",
    rgxv: "Invalid validation expression. Value cannot be validated."
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_req: {
      name: "Required value",
      tip: "This error will be shown when variable is marked as mandatory and value was not set.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_CustomTranslation = Default_CustomTranslation;
var Default_StringTranslation = {
  uid: "Unique Id",
  title: "Input: String",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  is_password: "Is password",
  minLength: "Min. input length",
  maxLength: "Max. input length",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    minLength: "Minimal length must be lower than maximal length and higher than zero.",
    maxLength: "Maximal length must be higher than minimal length and zero.",
    zeroLength: "Value must be higher than zero.",
    shortLength: "Value is shorter than min. length",
    longLength: "Value is longer than max. length"
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_minlength: {
      name: "Min. length",
      tip: "This error will be shown when value length is lower than mininimal length.",
      placeHolder: ""
    },
    err_maxlength: {
      name: "Max. length",
      tip: "This error will be shown when value length is higher than maximal length.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when variable is marked as mandatory and value was not set.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_StringTranslation = Default_StringTranslation;
var Default_ListStringTranslation = {
  uid: "Unique Id",
  title: "Input list: String",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  is_password: "Is password",
  minLength: "Min. input length",
  maxLength: "Max. input length",
  minNo: "Min. number of input values",
  maxNo: "Max. number of input values",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    minLength: "Minimal length must be lower than maximal length and higher than zero.",
    maxLength: "Maximal length must be higher than minimal length and zero.",
    minNo: "Minimal number of input must be lower than maximal length and higher than zero.",
    maxNo: "Maximal number of input must be higher than minimal length and zero.",
    zeroLength: "Value must be higher than zero.",
    shortLength: "Value is shorter than min. length",
    longLength: "Value is longer than max. length"
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_minlength: {
      name: "Min. length",
      tip: "This error will be shown when value length is lower than mininimal length.",
      placeHolder: ""
    },
    err_maxlength: {
      name: "Max. length",
      tip: "This error will be shown when value length is higher than maximal length.",
      placeHolder: ""
    },
    err_minNo: {
      name: "Min. number of input values",
      tip: "This error will be shown when number of values is lower than minimum.",
      placeHolder: ""
    },
    err_maxNo: {
      name: "Max. number of input values",
      tip: "This error will be shown when number of values is higher than maximum.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when variable is marked as mandatory and value was not set.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    },
    empty: {
      name: "Clear value",
      tip: "Clear value description",
      placeHolder: ""
    }
  }
};
exports.Default_ListStringTranslation = Default_ListStringTranslation;
var Default_SecTranslation = {
  uid: "Unique Id",
  title: "Section",
  name: "Name",
  columns: "columns",
  smallWidthAlert: "Text may be unreadable for users with lower screen resolution",
  desc: "Description",
  sub: "Children",
  messages: {
    uid: "Unique id is required"
  },
  sections: "Sections in package:"
};
exports.Default_SecTranslation = Default_SecTranslation;
var Default_PackTranslation = {
  uid: "Unique Id",
  title: "Section package",
  columns: "columns",
  smallWidthAlert: "Text may be unreadable for users with lower screen resolution",
  mode: "Design",
  mode_list: "List",
  mode_stack: "Stack",
  mode_unlisted: "Unlisted",
  sub: "Sections",
  messages: {
    uid: "Unique id is required"
  },
  addSection: "Add section",
  sections: "Sections in package:"
};
exports.Default_PackTranslation = Default_PackTranslation;
var Default_ParagraphTranslation = {
  name: "Title",
  title: "Paragraph",
  text: "Text",
  messages: {
    empty: "Title or text must be filled."
  }
};
exports.Default_ParagraphTranslation = Default_ParagraphTranslation;
var Default_FloatTranslation = {
  uid: "Unique Id",
  title: "Input: Float",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  precision: "Precision (in range 0 - 100)",
  min: "Minimum",
  max: "Maximum",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    min: "Value is lower than enabled minimum",
    max: "Value is higher than enabled maximum",
    type: "Invalid value type",
    inf: "Value cannot be infinite",
    prec: "Invalid precision of value",
    int: "Precision is equal to zero. In this case is float validated exactly like integer.\n For better performance we recommend you to use integer."
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_min: {
      name: "Lower than min",
      tip: "This error will be shown when value of input will be lower than minimal value.",
      placeHolder: ""
    },
    err_max: {
      name: "Higher than max",
      tip: "This error will be shown when value of input will be higher than maximal value.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when value is required and not filled.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    },
    err_inf: {
      name: "Infinite value",
      tip: "This error will be shown when value is set to Infinite or -Infinite.",
      placeHolder: ""
    },
    err_prec: {
      name: "Invalid precision",
      tip: "This error will be shown if precision of value is invalid.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_FloatTranslation = Default_FloatTranslation;
var Default_IntTranslation = {
  uid: "Unique Id",
  title: "Input: Integer",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  min: "Minimum",
  max: "Maximum",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    min: "Value is lower than enabled minimum",
    max: "Value is higher than enabled maximum",
    type: "Invalid value type",
    inf: "Value cannot be infinite"
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_min: {
      name: "Lower than min",
      tip: "This error will be shown when value of input will be lower than minimal value.",
      placeHolder: ""
    },
    err_max: {
      name: "Higher than max",
      tip: "This error will be shown when value of input will be higher than maximal value.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when value is required and not filled.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    },
    err_inf: {
      name: "Infinite value",
      tip: "This error will be shown when value is set to Infinite or -Infinite.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_IntTranslation = Default_IntTranslation;
var Default_ListIntegerTranslation = {
  uid: "Unique Id",
  title: "Input list: Integer",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  min: "Minimum",
  max: "Maximum",
  minNo: "Minimal no. of inputs",
  maxNo: "Maximal no. of inputs",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    min: "Value is lower than enabled minimum",
    max: "Value is higher than enabled maximum",
    zeroNo: "Number of input values must be higher than zero",
    minNo: "Number of input values must be lower than minimum number of input",
    maxNo: "Number of input values must be higher than maximum number of input",
    type: "Invalid value type. Value must be float.",
    typeNo: "Invalid value type. Value must be integer.",
    v_min: "Value is lower than enabled minimum",
    v_max: "Value is higher than enabled maximum",
    v_minNo: "Number of input values is lower than minimum",
    v_maxNo: "Number of input values is higher than maximum",
    v_type: "Invalid value type. Value must be float."
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_min: {
      name: "Lower than min",
      tip: "This error will be shown when value of input will be lower than minimal value.",
      placeHolder: ""
    },
    err_max: {
      name: "Higher than max",
      tip: "This error will be shown when value of input will be higher than maximal value.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when value is required and not filled.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    },
    err_maxNo: {
      name: "More than max. no. of values",
      tip: "This error will be shown when number of input values is more than maximum.",
      placeHolder: ""
    },
    err_minNo: {
      name: "Less than min. no. of values",
      tip: "This error will be shown when number of input values is less than minimum.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_ListIntegerTranslation = Default_ListIntegerTranslation;
var Default_ListFloatTranslation = {
  uid: "Unique Id",
  title: "Input list: Float",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  min: "Minimum",
  max: "Maximum",
  minNo: "Minimal no. of inputs",
  maxNo: "Maximal no. of inputs",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    min: "Value is lower than enabled minimum",
    max: "Value is higher than enabled maximum",
    zeroNo: "Number of input values must be higher than zero",
    minNo: "Number of input values must be lower than minimum number of input",
    maxNo: "Number of input values must be higher than maximum number of input",
    type: "Invalid value type. Value must be float.",
    typeNo: "Invalid value type. Value must be integer.",
    v_min: "Value is lower than enabled minimum",
    v_max: "Value is higher than enabled maximum",
    v_minNo: "Number of input values is lower than minimum",
    v_maxNo: "Number of input values is higher than maximum",
    v_type: "Invalid value type. Value must be float."
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_min: {
      name: "Lower than min",
      tip: "This error will be shown when value of input will be lower than minimal value.",
      placeHolder: ""
    },
    err_max: {
      name: "Higher than max",
      tip: "This error will be shown when value of input will be higher than maximal value.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when value is required and not filled.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    },
    err_maxNo: {
      name: "More than max. no. of values",
      tip: "This error will be shown when number of input values is more than maximum.",
      placeHolder: ""
    },
    err_minNo: {
      name: "Less than min. no. of values",
      tip: "This error will be shown when number of input values is less than minimum.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
exports.Default_ListFloatTranslation = Default_ListFloatTranslation;
var Default_ListTranslation = {
  uid: "Unique Id",
  title: "Input list",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  min: "Minimal value",
  max: "Maximal value",
  minNo: "Minimal no. of inputs",
  maxNo: "Maximal no. of inputs",
  minLength: "Min. input length",
  maxLength: "Max. input length",
  regex: "Validation expresion",
  precision: "Precision",
  type: "Type",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    min: "Value is lower than enabled minimum",
    max: "Value is higher than enabled maximum",
    type: "Invalid value type",
    many: "Number of input values is higher than maximum",
    less: "Number of input values is lower than minimum",
    minLength: "Minimal length must be lower than maximal length and higher than zero.",
    maxLength: "Maximal length must be higher than minimal length and zero.",
    rgx: "Invalid regular expression (validation expression)",
    norgx: "Regular expression (validation expression) is undefined. In this case is input validated exactly like string.\n For better performance we recommend you to use string.",
    rgxv: "Invalid validation expression. Value cannot be validated.",
    inf: "Value cannot be infinite"
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_min: {
      name: "Lower than min",
      tip: "This error will be shown when number of selected values will be lower than minimal value.",
      placeHolder: ""
    },
    err_max: {
      name: "Higher than max",
      tip: "This error will be shown when number of selected values will be higher than maximal value.",
      placeHolder: ""
    },
    err_minlength: {
      name: "Min. length",
      tip: "This error will be shown when value length is lower than mininimal length.",
      placeHolder: ""
    },
    err_maxlength: {
      name: "Max. length",
      tip: "This error will be shown when value length is higher than maximal length.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when value is required and not filled.",
      placeHolder: ""
    },
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    },
    err_noMax: {
      name: "More than max. no. of values",
      tip: "This error will be shown when number of input values is more than maximum.",
      placeHolder: ""
    },
    err_noMin: {
      name: "Less than min. no. of values",
      tip: "This error will be shown when number of input values is less than minimum.",
      placeHolder: ""
    },
    err_inf: {
      name: "Infinite value",
      tip: "This error will be shown when value is set to Infinite or -Infinite.",
      placeHolder: ""
    },
    err_prec: {
      name: "Invalid precision",
      tip: "This error will be shown if precision of value is invalid.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    }
  }
};
/*PropTypes.arrayOf(
        PropTypes.any(
            [
                PropTypes.shape({ name: PropTypes.string.isRequired, value: PropTypes.string, tip: PropTypes.string }),
                PropTypes.shape({ name: PropTypes.string, value: PropTypes.string.isRequired, tip: PropTypes.string }),
            ]
        )
      )*/

exports.Default_ListTranslation = Default_ListTranslation;
var Default_ListCustomTranslation = {
  uid: "Unique Id",
  title: "Input list: Custom",
  name: "Name",
  required: "Mandatory",
  value: "Value",
  default: "Default value",
  is_password: "Is password",
  regex: "Regular expression",
  minLength: "Min. input length",
  maxLength: "Max. input length",
  minNo: "Min. number of input values",
  maxNo: "Max. number of input values",
  placeholder: "Placeholder",
  tip: "Tip",
  messages: {
    uid: "Unique id is required",
    minLength: "Minimal length must be lower than maximal length and higher than zero.",
    maxLength: "Maximal length must be higher than minimal length and zero.",
    minNo: "Minimal number of input must be lower than maximal length and higher than zero.",
    maxNo: "Maximal number of input must be higher than minimal length and zero.",
    zeroLength: "Value must be higher than zero.",
    shortLength: "Value is shorter than min. length",
    longLength: "Value is longer than max. length",
    type: "Invalid value type",
    rgx: "Invalid regular expression (validation expression)",
    noregex: "Regular expression (validation expression) is undefined. In this case is input validated exactly like string.\n For better performance we recommend you to use string.",
    rgxv: "Invalid validation expression. Value cannot be validated."
  },
  errors: {
    title: "Errors",
    alert: "Some error messages are not set.",
    err_type: {
      name: "Invalid value",
      tip: "This error will be shown when value of input will be invalid - f.x. 1..2, 1.2, pink fluffy unicorn, etc.",
      placeHolder: ""
    },
    err_minlength: {
      name: "Min. length",
      tip: "This error will be shown when value length is lower than mininimal length.",
      placeHolder: ""
    },
    err_maxlength: {
      name: "Max. length",
      tip: "This error will be shown when value length is higher than maximal length.",
      placeHolder: ""
    },
    err_minNo: {
      name: "Min. number of input values",
      tip: "This error will be shown when number of values is lower than minimum.",
      placeHolder: ""
    },
    err_maxNo: {
      name: "Max. number of input values",
      tip: "This error will be shown when number of values is higher than maximum.",
      placeHolder: ""
    },
    err_req: {
      name: "Required value",
      tip: "This error will be shown when variable is marked as mandatory and value was not set.",
      placeHolder: ""
    }
  },
  warnings: {
    title: "Warnings",
    alert: "Some warning messages are not set.",
    warn_def: {
      name: "Default value used",
      tip: "This warning will be shown when default value is used.",
      placeHolder: ""
    },
    empty: {
      name: "Clear value",
      tip: "Clear value description",
      placeHolder: ""
    }
  }
};
exports.Default_ListCustomTranslation = Default_ListCustomTranslation;