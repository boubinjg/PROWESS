"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rebuild = exports.prototype = exports.valid = exports.clean = exports.InputListCustom = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactstrap = require("reactstrap");

var _propTypes2 = require("./propTypes");

var _utils = require("./utils");

var _validators = require("./validators");

var _icons = require("./icons");

var _ErrorContainer = _interopRequireDefault(require("./ErrorContainer"));

var _subcomponents = require("./subcomponents");

var _ListCustom = require("./subcomponents/ListCustom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var InputListCustom = /*#__PURE__*/function (_Component) {
  _inherits(InputListCustom, _Component);

  var _super = _createSuper(InputListCustom);

  function InputListCustom() {
    var _this;

    _classCallCheck(this, InputListCustom);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      isOpenMain: true,
      invalid: true,
      errPopUp: false,
      uidErrorShow: false,
      gId: (0, _utils.idGenerator)(_this.props.jkey.prefix + "il-rgx" + _this.props.jkey.sufix)
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (e) {
      var props = this.props.value;
      props[e.target.name] = e.target.value;
      props.uid = props.uid.replace(" ", "_");

      if (["regex", "minNo", "maxNo"].includes(e.target.name)) {
        props.value = (0, _ListCustom.validGetArrays)(props.value, props);
        props.default = (0, _ListCustom.validGetArrays)(props.default, props);
      }

      var validation = valid(props);

      if (this.props.onChange) {
        this.props.onChange(props, validation);
      }

      if (this.props.isValid) {
        this.props.isValid(validation);
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "onChangeBool", function (e) {
      var props = this.props.value;
      props[e.target.name] = e.target.checked;
      var validation = valid(props);

      if (this.props.onChange) {
        this.props.onChange(props, validation);
      }

      if (this.props.isValid) {
        this.props.isValid(validation);
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "onChangeError", function (key, value) {
      var props = this.props.value;
      props[key] = value;
      var validation = valid(props);

      if (this.props.onChange) {
        this.props.onChange(props, validation);
      }

      if (this.props.isValid) {
        this.props.isValid(validation);
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "onChangeList", function (key, value) {
      var props = this.props.value;
      props[key] = value;
      var validation = valid(props);

      if (this.props.onChange) {
        this.props.onChange(props, validation);
      }

      if (this.props.isValid) {
        this.props.isValid(validation);
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "collapseMain", function () {
      this.setState({
        isOpenMain: !this.state.isOpenMain
      });
    }.bind(_assertThisInitialized(_this)));

    return _this;
  }

  _createClass(InputListCustom, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var invalid = !valid(this.props.value);
      /* ------ validation ------ */

      var fmaxNo = (0, _validators.filterInt)(this.props.value.maxNo);
      var fminNo = (0, _validators.filterInt)(this.props.value.minNo);
      var mnN = (0, _validators.intValid)(this.props.value.minNo);
      var mxN = (0, _validators.intValid)(this.props.value.maxNo);
      var maxNoValid = this.props.value.maxNo.length === 0 || !isNaN(fmaxNo) && isFinite(fmaxNo);
      var minNoValid = this.props.value.minNo.length === 0 || !isNaN(fminNo) && isFinite(fminNo);
      var rangeNoValid = true;

      if (mnN && mxN) {
        rangeNoValid = maxNoValid && minNoValid && fminNo <= fmaxNo;
      }

      var err_maxNo = fmaxNo > 0 && maxNoValid && rangeNoValid;
      var err_minNo = fminNo >= 0 && minNoValid && rangeNoValid;
      var renderErrRegex = [];

      try {
        new RegExp(this.props.value.regex);
      } catch (_unused) {
        renderErrRegex = [].concat(_toConsumableArray(renderErrRegex), [/*#__PURE__*/_react.default.createElement(_reactstrap.FormFeedback, {
          key: this.props.gId + "-RT-cb-RGX",
          valid: false
        }, this.props.translation.messages["regex"])]);
      }

      var default_section = /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      });

      if (this.props.value.required) {
        default_section = /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
          sm: 6
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
          row: true
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
          sm: 1,
          size: this.props.size,
          className: "jofgen-D-inputLabel"
        }, this.props.translation.default), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
          className: "jofgen-D-input-col"
        }, /*#__PURE__*/_react.default.createElement(_subcomponents.ListCustom, {
          uid: "default",
          regex: renderErrRegex.length === 0 ? this.props.value.regex : ".*",
          value: this.props.value.default,
          onChange: this.onChangeList,
          min: (0, _validators.intValid)(this.props.value.minNo) ? this.props.value.minNo : undefined,
          max: (0, _validators.intValid)(this.props.value.maxNo) ? this.props.value.maxNo : undefined,
          bsSize: this.props.size,
          err_minNo: this.props.translation.messages.v_minNo,
          err_maxNo: this.props.translation.messages.v_maxNo,
          err_type: this.props.translation.messages.v_type,
          none_enabled: true
        }))));
      }

      return /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.className + " jofgen-D-card jofgen-D-rgx" + (this.props.value.required ? " required" : "") + (invalid || this.props.invalid ? " invalid" : ""),
        style: this.props.style
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.CardBody, {
        className: "jofgen-D-card-body"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.CardTitle, null, /*#__PURE__*/_react.default.createElement("table", {
        style: {
          width: "100%"
        }
      }, /*#__PURE__*/_react.default.createElement("tbody", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", {
        className: "jofgen-D-children"
      }, invalid || this.props.invalid ? this.props.icons.invalid_icon : this.props.icons.icon, /*#__PURE__*/_react.default.createElement("b", null, this.props.translation.title)), /*#__PURE__*/_react.default.createElement("td", {
        style: {
          width: "50px",
          textAlign: "right"
        }
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
        size: this.props.size,
        color: "link",
        onClick: this.collapseMain
      }, /*#__PURE__*/_react.default.createElement("svg", {
        className: "jofgen-D-collapse-icon",
        style: {
          transform: this.state.isOpenMain ? "rotate(180deg)" : "rotate(0deg)"
        },
        viewBox: "0 0 24 24"
      }, /*#__PURE__*/_react.default.createElement("path", {
        fill: "#000",
        d: "M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
      })))))))), /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        sm: 2,
        size: this.props.size,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.uid), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "uid",
        type: "text",
        value: this.props.value.uid,
        onChange: this.onChange,
        invalid: this.props.value.uid.length === 0 || this.props.invalid,
        bsSize: this.props.size
      }), /*#__PURE__*/_react.default.createElement(_reactstrap.FormFeedback, {
        valid: false
      }, this.props.translation.messages.uid), /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        check: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        size: this.props.size,
        check: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "required",
        type: "checkbox",
        checked: this.props.value.required,
        onChange: this.onChangeBool
      }), " " + this.props.translation.required))))), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: "6"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true,
        className: "jofgen-D-form-group"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 2,
        className: "jofgen-D-inputLabel jofgen-D-inputLabelWithpopUp"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        className: "jofgen-D-col-form-label-sm",
        size: this.props.size
      }, this.props.translations.width), ["1", "2", "3", "4", "5"].includes(this.props.value.sm) ? /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
        id: this.state.gId + "popup",
        style: {
          float: "right"
        },
        onMouseOver: function onMouseOver() {
          _this2.setState({
            alertShow: true
          });
        },
        onMouseOut: function onMouseOut() {
          _this2.setState({
            alertShow: false
          });
        }
      }, this.props.icons_set.alert), /*#__PURE__*/_react.default.createElement(_reactstrap.Popover, {
        target: this.state.gId + "popup",
        isOpen: this.state.alertShow
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.PopoverBody, null, this.props.translations.smallWidthAlert))) : null), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.CustomInput, {
        name: "sm",
        type: "select",
        value: this.props.value.sm,
        onChange: this.onChange,
        id: this.state.gId + "dropdown",
        bsSize: this.props.size
      }, /*#__PURE__*/_react.default.createElement("option", {
        value: 1
      }, "1 (12 ", this.props.translations.columns, ")"), /*#__PURE__*/_react.default.createElement("option", {
        value: 2
      }, "2 (6 ", this.props.translations.columns, ")"), /*#__PURE__*/_react.default.createElement("option", {
        value: 3
      }, "3 (4 ", this.props.translations.columns, ")"), /*#__PURE__*/_react.default.createElement("option", {
        value: 4
      }, "4 (3 ", this.props.translations.columns, ")"), /*#__PURE__*/_react.default.createElement("option", {
        value: 5
      }, "5"), /*#__PURE__*/_react.default.createElement("option", {
        value: 6
      }, "6 (2 ", this.props.translations.columns, ")"), /*#__PURE__*/_react.default.createElement("option", {
        value: 7
      }, "7"), /*#__PURE__*/_react.default.createElement("option", {
        value: 8
      }, "8"), /*#__PURE__*/_react.default.createElement("option", {
        value: 9
      }, "9"), /*#__PURE__*/_react.default.createElement("option", {
        value: 10
      }, "10"), /*#__PURE__*/_react.default.createElement("option", {
        value: 11
      }, "11"), /*#__PURE__*/_react.default.createElement("option", {
        value: 12
      }, "12 (1 ", this.props.translations.columns, ")"))))), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        sm: 1,
        size: this.props.size,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.name), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "name",
        type: "text",
        value: this.props.value.name,
        onChange: this.onChange,
        bsSize: this.props.size
      })))), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        size: this.props.size,
        sm: 1,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.placeholder), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "placeholder",
        type: "text",
        value: this.props.value.placeholder,
        onChange: this.onChange,
        bsSize: this.props.size
      })))), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 12
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        size: this.props.size,
        sm: 1,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.tip), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "tip",
        type: "textarea",
        value: this.props.value.tip,
        onChange: this.onChange,
        bsSize: this.props.size
      }))))), /*#__PURE__*/_react.default.createElement(_reactstrap.Collapse, {
        isOpen: this.state.isOpenMain
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        sm: 1,
        size: this.props.size,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.value), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_subcomponents.ListCustom, {
        uid: "value",
        regex: renderErrRegex.length === 0 ? this.props.value.regex : ".*",
        value: this.props.value.value,
        onChange: this.onChangeList,
        min: (0, _validators.intValid)(this.props.value.minNo) ? (0, _validators.filterInt)(this.props.value.minNo) : undefined,
        max: (0, _validators.intValid)(this.props.value.maxNo) ? (0, _validators.filterInt)(this.props.value.maxNo) : undefined,
        bsSize: this.props.size,
        err_minNo: this.props.translation.messages.v_minNo,
        err_maxNo: this.props.translation.messages.v_maxNo,
        err_type: this.props.translation.messages.v_type,
        none_enabled: true
      })))), default_section, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 12
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        size: this.props.size,
        sm: 1,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.regex), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "regex",
        type: "text",
        value: this.props.value.regex,
        onChange: this.onChange,
        invalid: renderErrRegex.length > 0,
        bsSize: this.props.size
      }), renderErrRegex, this.props.value.regex.length === 0 ? /*#__PURE__*/_react.default.createElement(_reactstrap.FormText, {
        color: "info"
      }, this.props.translation.messages["noregex"]) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null)))), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        sm: 1,
        size: this.props.size,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.minNo), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "minNo",
        type: "number",
        step: "1",
        value: this.props.value.minNo,
        onChange: this.onChange,
        min: "0",
        max: this.props.value.maxNo.length > 0 ? this.props.value.maxNo : undefined,
        invalid: !minNoValid || !rangeNoValid || fminNo < 0,
        bsSize: this.props.size
      }), !rangeNoValid ? /*#__PURE__*/_react.default.createElement(_reactstrap.FormFeedback, {
        valid: false
      }, this.props.translation.messages.maxNo) : null, fminNo < 0 ? /*#__PURE__*/_react.default.createElement(_reactstrap.FormFeedback, {
        valid: false
      }, this.props.translation.messages.zeroNo) : null))), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        sm: 6
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
        row: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
        sm: 1,
        size: this.props.size,
        className: "jofgen-D-inputLabel"
      }, this.props.translation.maxNo), /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
        className: "jofgen-D-input-col"
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
        name: "maxNo",
        type: "number",
        step: "1",
        value: this.props.value.maxNo,
        onChange: this.onChange,
        min: this.props.value.minNo.length > 0 ? this.props.value.minNo : "0",
        invalid: !maxNoValid || !rangeNoValid || fmaxNo < 0,
        bsSize: this.props.size
      }), !rangeNoValid ? /*#__PURE__*/_react.default.createElement(_reactstrap.FormFeedback, {
        valid: false
      }, this.props.translation.messages.maxNo) : null, fmaxNo < 0 ? /*#__PURE__*/_react.default.createElement(_reactstrap.FormFeedback, {
        valid: false
      }, this.props.translation.messages.zeroNo) : null)))))), /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_ErrorContainer.default, {
        size: this.props.size,
        jkey: {
          prefix: this.state.gId + "-",
          sufix: ""
        },
        icons: {
          icon: this.props.icons.errors,
          invalid_icon: this.props.icons.errorsAlert
        },
        values: Object.assign({}, this.props.value.required ? {
          err_req: this.props.value.err_req
        } : null, err_minNo ? {
          err_minNo: this.props.value.err_minNo
        } : null, err_maxNo ? {
          err_maxNo: this.props.value.err_maxNo
        } : null),
        errors: {
          err_type: this.props.translation.errors.err_type,
          err_req: this.props.translation.errors.err_req,
          err_minNo: this.props.translation.errors.err_minNo,
          err_maxNo: this.props.translation.errors.err_maxNo
        },
        translation: {
          title: this.props.translation.errors.title,
          alert: this.props.translation.errors.alert
        },
        onChange: this.onChangeError
      })), /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_ErrorContainer.default, {
        size: this.props.size,
        className: "jofgen-D-warning",
        jkey: {
          prefix: this.state.gId + "-",
          sufix: "warn"
        },
        icons: {
          icon: this.props.icons.warnings,
          invalid_icon: this.props.icons.warningsAlert
        },
        values: Object.assign({}, this.props.value.default.length > 0 ? {
          warn_def: this.props.value.warn_def
        } : null, {
          empty: this.props.value.empty
        }),
        errors: {
          warn_def: this.props.translation.warnings.warn_def,
          empty: this.props.translation.warnings.empty
        },
        translation: {
          title: this.props.translation.warnings.title,
          alert: this.props.translation.warnings.alert
        },
        onChange: this.onChangeError
      })));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var nextState = {};

      if (nextProps.value && nextProps.isValid) {
        nextProps.isValid(valid(nextState.value));
      }

      return nextState;
    }
  }]);

  return InputListCustom;
}(_react.Component);

exports.InputListCustom = InputListCustom;
InputListCustom.propTypes = {
  /* properties */
  value: _propTypes.default.shape({
    uid: _propTypes.default.string,
    name: _propTypes.default.string,
    required: _propTypes.default.bool,
    value: _propTypes.default.exact({
      new_value: _propTypes.default.string.isRequired,
      new_type: _propTypes.default.bool.isRequired,
      values: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
      etype: _propTypes.default.arrayOf(_propTypes.default.bool).isRequired
    }),
    default: _propTypes.default.exact({
      new_value: _propTypes.default.string.isRequired,
      new_type: _propTypes.default.bool.isRequired,
      values: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
      etype: _propTypes.default.arrayOf(_propTypes.default.bool).isRequired
    }),
    regex: function regex(props, propName, componentName) {
      if (props[propName] !== undefined) {
        try {
          new RegExp(props[propName]);
        } catch (_unused2) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Invalid regular expression."));
        }
      }
    },
    minNo: function minNo(props, propName, componentName) {
      if (props[propName] !== undefined) {
        if (!(0, _validators.intValid)(String(props[propName]))) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Value must be integer."));
        }

        if (props[propName] < 0) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Value must be greater than zero or equal to zero."));
        }

        if (props["maxNo"] !== undefined && props["maxNo"] < props[propName]) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Value must be lower than maxNo."));
        }
      }
    },
    maxNo: function maxNo(props, propName, componentName) {
      if (props[propName] !== undefined) {
        if (!(0, _validators.intValid)(String(props[propName]))) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Value must be integer."));
        }

        if (props[propName] < 0) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Value must be greater than zero or equal to zero."));
        }

        if (props["minNo"] !== undefined && props["minNo"] > props[propName]) {
          return new Error("Invalid prop `".concat(propName, "` supplied to `").concat(propName, "`. Value must be greater than minNo."));
        }
      }
    },
    err_req: _propTypes.default.string,
    empty: _propTypes.default.string,
    err_minNo: _propTypes.default.string,
    err_maxNo: _propTypes.default.string,
    warn_def: _propTypes.default.string,
    placeholder: _propTypes.default.string,
    tip: _propTypes.default.string,
    sm: _propTypes.default.oneOf(["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"])
  }),
  translation: _propTypes.default.shape(_propTypes2.ListCustomTranslationPropType),

  /* functions */
  onChange: _propTypes.default.func,
  invalid: _propTypes.default.bool,

  /* icons */
  icons: _propTypes.default.shape({
    icon: _propTypes.default.any.isRequired,
    invalid_icon: _propTypes.default.any.isRequired,
    errors: _propTypes.default.any.isRequired,
    errorsAlert: _propTypes.default.any.isRequired,
    warnings: _propTypes.default.any.isRequired,
    warningsAlert: _propTypes.default.any.isRequired
  }),

  /* aditional */
  jkey: _propTypes.default.shape(_propTypes2.keyPropType),
  size: _propTypes.default.string
};
InputListCustom.defaultProps = {
  className: "",
  translation: _propTypes2.Default_ListCustomTranslation,
  invalid: false,
  icons: {
    icon: _icons.inputlist,
    invalid_icon: _icons.invalid_inputlist,
    errors: _icons.error,
    errorsAlert: _icons.errorAlert,
    warnings: _icons.warnings,
    warningsAlert: _icons.warningAlert
  },
  jkey: _propTypes2.Default_keyPropType,
  size: "sm"
};

var clean = function clean(e) {
  var validDefault = !e.default.etype.includes(false);
  var validValue = !e.value.etype.includes(false);
  var minNo = (0, _validators.filterInt)(e.minNo);
  var maxNo = (0, _validators.filterInt)(e.maxNo);
  var rgxValid = true;

  try {
    new RegExp(e.regex).test('');
  } catch (_unused3) {
    rgxValid = false;
  }

  var minValid = (0, _validators.intValid)(e.minNo) && (maxNo >= minNo || isNaN(maxNo)) && minNo >= 0;
  var maxValid = (0, _validators.intValid)(e.maxNo) && (maxNo >= minNo || isNaN(minNo)) && maxNo >= 0;
  var defLen = e.default.values.length > 0;
  var valLen = e.value.values.length > 0;
  var defValid = defLen && (maxNo >= e.default.values.length && maxValid || !maxValid && defLen) && (minNo <= e.default.values.length && minValid || !minValid && defLen) && validDefault;
  var valValid = valLen && (maxNo >= e.value.values.length && maxValid || !maxValid && valLen) && (minNo <= e.value.values.length && minValid || !minValid && valLen) && validValue;
  return Object.assign({}, {
    uid: e.uid
  }, e.name.length > 0 ? {
    name: e.name
  } : null, e.required ? {
    required: e.required
  } : null, valValid ? {
    value: e.value.values
  } : null, defValid && e.required ? {
    default: e.default.values
  } : null, rgxValid && e.regex.length > 0 ? {
    regex: e.regex
  } : null, minValid ? {
    minNo: minNo
  } : null, maxValid ? {
    maxNo: maxNo
  } : null, e.err_req.length > 0 && e.required ? {
    err_req: e.err_req
  } : null, e.err_minNo.length > 0 && minValid ? {
    err_minNo: e.err_minNo
  } : null, e.err_maxNo.length > 0 && maxValid ? {
    err_maxNo: e.err_maxNo
  } : null, e.warn_def.length > 0 && defValid && e.required ? {
    warn_def: e.warn_def
  } : null, e.placeholder.length > 0 ? {
    placeholder: e.placeholder
  } : null, e.tip.length > 0 ? {
    tip: e.tip
  } : null, e.empty.length > 0 ? {
    empty: e.empty
  } : null, {
    type: "rgx_il"
  }, e.sm !== undefined && e.sm !== null && ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"].includes(e.sm) ? {
    sm: e.sm
  } : null);
};

exports.clean = clean;

var valid = function valid(e) {
  var validDefault = !e.default.etype.includes(false);
  var validValue = !e.value.etype.includes(false);
  var fmin = (0, _validators.filterInt)(e.minNo);
  var fmax = (0, _validators.filterInt)(e.maxNo);
  var vdl = e.default.values.length;
  var vvl = e.value.values.length;
  var vm = (0, _validators.intValid)(e.minNo);
  var vmx = (0, _validators.intValid)(e.maxNo);
  return e.uid.length > 0 && (e.minNo.length === 0 || vm) && (e.maxNo.length === 0 || vmx) && (vm && vmx && fmin <= fmax || !vm || !vmx) && ((vdl <= fmax || !fmax) && validDefault && (vdl >= fmin || !fmin) || vdl === 0 || !e.required) && ((vvl <= fmax || !fmax) && validValue && (vvl >= fmin || !fmin) || vvl === 0);
};

exports.valid = valid;

var prototype = function prototype() {
  return {
    uid: "",
    name: "",
    required: false,
    value: (0, _ListCustom.prototype)(),
    default: (0, _ListCustom.prototype)(),
    regex: "",
    minNo: "",
    maxNo: "",
    err_req: "",
    err_minNo: "",
    err_maxNo: "",
    warn_def: "",
    placeholder: "",
    tip: "",
    empty: "",
    type: "rgx_il",
    sm: "12"
  };
};

exports.prototype = prototype;

var rebuild = function rebuild(e) {
  return {
    uid: e.uid !== undefined && e.uid !== null ? String(e.uid) : "",
    name: e.name !== undefined && e.name !== null ? String(e.name) : "",
    required: e.required !== undefined && e.required !== null ? Boolean(e.required) : false,
    value: e.value !== undefined && e.value !== null ? (0, _ListCustom.rebuild)(e.value, e) : (0, _ListCustom.prototype)(),
    default: e.default !== undefined && e.default !== null ? (0, _ListCustom.rebuild)(e.default, e) : (0, _ListCustom.prototype)(),
    regex: e.regex !== undefined && e.regex !== null ? String(e.regex) : ".*",
    minNo: e.min !== undefined && e.min !== null ? e.minNo : "",
    maxNo: e.maxNo !== undefined && e.maxNo !== null ? e.maxNo : "",
    err_req: e.err_req !== undefined && e.err_req !== null ? String(e.err_req) : "",
    err_minNo: e.err_minNo !== undefined && e.err_minNo !== null ? String(e.err_minNo) : "",
    err_maxNo: e.err_maxNo !== undefined && e.err_maxNo !== null ? String(e.err_maxNo) : "",
    warn_def: e.warn_def !== undefined && e.warn_def !== null ? String(e.warn_def) : "",
    placeholder: e.placeholder !== undefined && e.placeholder !== null ? String(e.placeholder) : "",
    tip: e.tip !== undefined && e.tip !== null ? String(e.tip) : "",
    empty: e.empty !== undefined && e.empty !== null ? String(e.empty) : "",
    type: "rgx_il",
    sm: e.sm !== undefined && e.sm !== null && ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"].includes(e.sm) ? String(e.sm) : "12"
  };
};

exports.rebuild = rebuild;