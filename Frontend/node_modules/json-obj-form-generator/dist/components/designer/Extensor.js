"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("./utils");

var _reactstrap = require("reactstrap");

var _icons = require("./icons");

var _propTypes2 = require("./propTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Extensor = /*#__PURE__*/function (_Component) {
  _inherits(Extensor, _Component);

  var _super = _createSuper(Extensor);

  function Extensor() {
    var _this;

    _classCallCheck(this, Extensor);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      cardShow: false,
      addElementShow: true,
      value: _this.props.values !== undefined && Object.keys(_this.props.values).length > 0 ? Object.keys(_this.props.values)[0] : undefined,
      flag: false,
      gId: (0, _utils.idGenerator)(_this.props.jkey.prefix + "extensor" + _this.props.jkey.sufix)
    });

    _defineProperty(_assertThisInitialized(_this), "onSubmit", function () {
      if (this.props.onSubmit !== undefined && this.state.value !== undefined) {
        this.props.onSubmit(this.state.value);
        this.setState({
          cardShow: false,
          addElementShow: true
        });
      }
    });

    return _this;
  }

  _createClass(Extensor, [{
    key: "onChange",
    value: function onChange(value) {
      this.setState({
        value: value,
        flag: true
      });

      if (this.props.onChange !== undefined) {
        this.props.onChange(value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var card;

      if (this.state.cardShow) {
        card = /*#__PURE__*/_react.default.createElement(_reactstrap.Card, null, /*#__PURE__*/_react.default.createElement(_reactstrap.CardBody, null, /*#__PURE__*/_react.default.createElement(_reactstrap.FormGroup, {
          row: true,
          className: "mb-0"
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, {
          sm: 12
        }, /*#__PURE__*/_react.default.createElement("table", {
          style: {
            width: "100%"
          }
        }, /*#__PURE__*/_react.default.createElement("tbody", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", {
          style: {
            width: "40px"
          }
        }, this.props.icons.icon), /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement(_reactstrap.CustomInput, {
          bsSize: this.props.size,
          id: this.state.gId,
          className: "dropdown",
          type: "select",
          value: this.props.value,
          onChange: function onChange(e) {
            _this2.onChange(e.target.value);
          }
        }, Object.keys(this.props.values).map(function (item, idx) {
          if (_this2.props.names[item] !== undefined) {
            return /*#__PURE__*/_react.default.createElement("option", {
              key: idx,
              value: item
            }, _this2.props.names[item].title);
          } else {
            return /*#__PURE__*/_react.default.createElement("option", {
              key: idx,
              value: item
            }, item);
          }
        }))), /*#__PURE__*/_react.default.createElement("td", {
          className: "jofgen-D-ext--btns-container"
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          size: this.props.size,
          color: "jofgen-D-theme",
          className: "jofgen-D-ext--btn-add btn-primary",
          disabled: this.props.onSubmit === undefined,
          onClick: function onClick() {
            _this2.onSubmit();
          }
        }, this.props.translation.add), /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          size: this.props.size,
          color: "jofgen-D-theme",
          className: "jofgen-D-ext--btn-drop btn-danger",
          onClick: function onClick() {
            _this2.setState({
              cardShow: false,
              addElementShow: true
            });
          }
        }, this.props.icons.drop)))))))));
      }

      return /*#__PURE__*/_react.default.createElement("div", {
        className: "jofgen-D-ext " + this.props.className,
        style: this.props.style
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Row, {
        style: {
          opacity: this.state.addElementShow && !this.state.cardShow ? "1" : "0",
          height: this.state.addElementShow && !this.state.cardShow ? "1.8rem" : "0"
        }
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.Col, null, /*#__PURE__*/_react.default.createElement("div", {
        className: "hr"
      }), /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
        color: "light",
        className: "btn-add-element",
        onClick: function onClick() {
          _this2.setState({
            cardShow: true,
            addElementShow: false
          });
        },
        size: this.props.size
      }, this.props.icons.addComponent, " ", this.props.translation.addComponent))), /*#__PURE__*/_react.default.createElement(_react.Fragment, null, card));
    }
  }]);

  return Extensor;
}(_react.Component);

exports.default = Extensor;
Extensor.propTypes = {
  onSubmit: _propTypes.default.func,
  onChange: _propTypes.default.func,
  value: _propTypes.default.string,
  values: _propTypes.default.object,
  style: _propTypes.default.object,
  icons: _propTypes.default.shape({
    drop: _propTypes.default.any.isRequired,
    icon: _propTypes.default.any.isRequired,
    addComponent: _propTypes.default.any.isRequired
  }),
  translation: _propTypes.default.shape({
    add: _propTypes.default.string.isRequired,
    addComponent: _propTypes.default.string.isRequired
  }),
  jkey: _propTypes.default.shape(_propTypes2.keyPropType)
};
Extensor.defaultProps = {
  className: "",
  values: {},
  icons: {
    icon: _icons.extensor,
    drop: _icons.trashCan,
    addComponent: _icons.plus
  },
  translation: {
    add: "Add",
    addComponent: "Add component"
  },
  jkey: _propTypes2.Default_keyPropType
};