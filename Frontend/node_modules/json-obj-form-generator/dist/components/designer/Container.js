"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactstrap = require("reactstrap");

var _icons = require("./icons");

var _Generator = _interopRequireDefault(require("../../Generator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Container = /*#__PURE__*/function (_Component) {
  _inherits(Container, _Component);

  var _super = _createSuper(Container);

  function Container() {
    var _this;

    _classCallCheck(this, Container);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      view: false
    });

    _defineProperty(_assertThisInitialized(_this), "onViewClick", function () {
      _this.setState({
        view: !_this.state.view
      });
    });

    return _this;
  }

  _createClass(Container, [{
    key: "render",
    value: function render() {
      var upBtn;
      var downBtn;
      var dropBtn;
      var resultContainer;
      var viewBtn;

      if (this.props.onUpButtonClick !== undefined || !this.props.hideDissabled) {
        upBtn = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          className: "btn-up",
          disabled: this.props.onUpButtonClick === undefined,
          color: "light",
          size: this.props.size,
          onClick: this.props.onUpButtonClick
        }, this.props.icons.arrowUp));
      }

      if (this.props.onDownButtonClick !== undefined || !this.props.hideDissabled) {
        downBtn = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          className: "btn-down",
          disabled: this.props.onDownButtonClick === undefined,
          color: "light",
          size: this.props.size,
          onClick: this.props.onDownButtonClick
        }, this.props.icons.arrowDown));
      }

      if (this.props.onRemoveButtonClick !== undefined) {
        dropBtn = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          className: "btn-remove",
          disabled: this.props.onRemoveButtonClick === undefined,
          color: "light",
          size: this.props.size,
          onClick: this.props.onRemoveButtonClick
        }, this.props.icons.drop));
      }

      if (this.props.extended) {
        viewBtn = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          className: "btn-view",
          color: "light",
          size: this.props.size,
          onClick: this.onViewClick
        }, this.state.view ? this.props.icons.view : this.props.icons.unview));
      }

      if (this.props.onUpButtonClick !== undefined || this.props.onDownButtonClick !== undefined || !this.props.hideDissabled || this.props.onRemoveButtonClick !== undefined) {
        var extras = [];
        extras.push(this.props.extras);
        resultContainer = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
          className: "jofgen-D-component-btns-left"
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.ButtonGroup, {
          vertical: true
        }, upBtn, downBtn, viewBtn, dropBtn)), /*#__PURE__*/_react.default.createElement("div", {
          className: "jofgen-D-component-body"
        }, this.state.view ? /*#__PURE__*/_react.default.createElement(_Generator.default, {
          json: extras
        }) : this.props.children));
      } else {
        resultContainer = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, this.props.children);
      }

      return /*#__PURE__*/_react.default.createElement(_reactstrap.Card, {
        className: "jofgen-D-component jofgen-D-designer-container",
        style: this.props.style,
        draggable: this.props.draggable
      }, resultContainer);
    }
  }]);

  return Container;
}(_react.Component);

exports.default = Container;
Container.propTypes = {
  children: _propTypes.default.any.isRequired,
  hideDissabled: _propTypes.default.bool,
  position: _propTypes.default.number,
  enabledCounter: _propTypes.default.bool,
  onUpButtonClick: _propTypes.default.func,
  onDownButtonClick: _propTypes.default.func,
  onChangePosition: _propTypes.default.func,
  onRemoveButtonClick: _propTypes.default.func,
  draggable: _propTypes.default.bool,
  extended: _propTypes.default.bool,
  icons: _propTypes.default.exact({
    view: _propTypes.default.any.isRequired,
    unview: _propTypes.default.any.isRequired,
    drop: _propTypes.default.any.isRequired,
    arrowDown: _propTypes.default.any.isRequired,
    arrowUp: _propTypes.default.any.isRequired
  })
};
Container.defaultProps = {
  hideDissabled: true,
  position: 0,
  enabledCounter: false,
  draggable: false,
  icons: {
    view: _icons.view,
    unview: _icons.unview,
    drop: _icons.dropIco,
    arrowDown: _icons.down,
    arrowUp: _icons.up
  }
};