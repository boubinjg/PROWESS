"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactstrap = require("reactstrap");

var _designer = require("./components/designer");

var _utils = require("./utils");

var _icons = require("./icons");

var _icons2 = require("./components/designer/icons");

var _shared = require("./components/shared");

var _propTypes2 = require("./components/designer/propTypes");

var _Generator = _interopRequireDefault(require("./Generator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Designer = /*#__PURE__*/function (_Component) {
  _inherits(Designer, _Component);

  var _super = _createSuper(Designer);

  function Designer() {
    var _this;

    _classCallCheck(this, Designer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      uids: [],
      valid: [],
      sub_items: [],
      meta: [],
      flag: false,
      fatal_error: false,
      view: false
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (value, valid, idx) {
      var meta = this.state.meta;
      var sub_items = this.state.sub_items;
      var uids = this.state.uids;
      var validx = this.state.valid;
      /* edit element */

      meta[idx] = value;
      sub_items[idx] = _shared.designer_aliases[value.type].clean(value);
      uids[idx] = value.uid;
      validx[idx] = valid;
      this.setState({
        sub_items: sub_items,
        uids: uids,
        valid: validx,
        invalid: _designer.recursive_get_unique_valid[this.props.mode](uids),
        flag: true
      });

      if (this.props.onChange) {
        this.props.onChange(sub_items, (0, _designer.isValid)(uids, validx, this.props.mode));
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "onChangeSub", function (value, valid, uid, subs, idx) {
      var meta = this.state.meta;
      var sub_items = this.state.sub_items;
      var uids = this.state.uids;
      var validx = this.state.valid;
      /* edit element */

      meta[idx] = value;
      sub_items[idx] = subs;
      uids[idx] = uid;
      validx[idx] = valid;
      this.setState({
        sub_items: sub_items,
        uids: uids,
        valid: validx,
        invalid: _designer.recursive_get_unique_valid[this.props.mode](uids),
        flag: true
      });

      if (this.props.onChange) {
        this.props.onChange(sub_items, (0, _designer.isValid)(uids, validx, this.props.mode));
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "addChildren", function (position, type_idx) {
      var sub_items = this.state.sub_items;
      var meta = this.state.meta;
      var uids = this.state.uids;
      var valid = this.state.valid;
      /* adding new element */

      meta.splice(position, 0, _objectSpread({}, _shared.designer_aliases[type_idx].prototype()));
      sub_items.splice(position, 0, _objectSpread({}, _shared.designer_aliases[type_idx].clean(_shared.designer_aliases[type_idx].prototype())));
      uids.splice(position, 0, _shared.designer_aliases[type_idx].defaultUid());
      valid.splice(position, 0, _shared.designer_aliases[type_idx].defaultValid());
      this.setState({
        sub_items: sub_items,
        meta: meta,
        uids: uids,
        valid: valid,
        invalid: _designer.recursive_get_unique_valid[this.props.mode](uids),
        flag: true
      });

      if (this.props.onChange) {
        this.props.onChange(sub_items, (0, _designer.isValid)(uids, valid, this.props.mode));
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "removeChildren", function (idx) {
      var sub_items = this.state.sub_items;
      var meta = this.state.meta;
      var uids = this.state.uids;
      var valid = this.state.valid;
      /* adding new element */

      meta.splice(idx, 1);
      sub_items.splice(idx, 1);
      uids.splice(idx, 1);
      valid.splice(idx, 1);
      this.setState({
        sub_items: sub_items,
        meta: meta,
        uids: uids,
        valid: valid,
        invalid: _designer.recursive_get_unique_valid[this.props.mode](uids),
        flag: true
      });

      if (this.props.onChange) {
        this.props.onChange(sub_items, (0, _designer.isValid)(uids, valid, this.props.mode));
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "changePosition", function (idx, move) {
      var sub_items = this.state.sub_items;
      var meta = this.state.meta;
      var uids = this.state.uids;
      var valid = this.state.valid;
      var sub_idx_move = sub_items[idx];
      var meta_idx_move = meta[idx];
      var uids_idx_move = uids[idx];
      var valid_idx_move = valid[idx];
      sub_items[idx] = sub_items[idx + move];
      meta[idx] = meta[idx + move];
      uids[idx] = uids[idx + move];
      valid[idx] = valid[idx + move];
      sub_items[idx + move] = sub_idx_move;
      meta[idx + move] = meta_idx_move;
      uids[idx + move] = uids_idx_move;
      valid[idx + move] = valid_idx_move;
      this.setState({
        sub_items: sub_items,
        meta: meta,
        uids: uids,
        valid: valid,
        invalid: _designer.recursive_get_unique_valid[this.props.mode](uids),
        flag: true
      });

      if (this.props.onChange) {
        this.props.onChange(sub_items, (0, _designer.isValid)(uids, valid, this.props.mode));
      }
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "exportJSON", function () {
      this.setState({
        exportOpen: !this.state.exportOpen
      });
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "preview", function () {
      this.setState({
        view: !this.state.view
      });
    }.bind(_assertThisInitialized(_this)));

    _defineProperty(_assertThisInitialized(_this), "copyToClipboard", function () {
      var _this2 = this;

      try {
        navigator.clipboard.writeText(JSON.stringify(this.state.sub_items));
        this.setState({
          copy_notification_message: this.props.translation.copy_success,
          copy_notification: true,
          copy_notification_icon: this.props.icons.copy_success,
          copy_notification_color: "jofgen-D-copy-success",
          exportOpen: false
        });
        setTimeout(function () {
          _this2.setState({
            copy_notification: false
          });
        }, 2000);
      } catch (_unused) {
        this.setState({
          copy_notification_message: this.props.translation.copy_fail,
          copy_notification: true,
          copy_notification_icon: this.props.icons.copy_failed,
          copy_notification_color: "jofgen-D-copy-failed",
          exportOpen: false
        });
        setTimeout(function () {
          _this2.setState({
            copy_notification: false
          });
        }, 2000);
      }
    }.bind(_assertThisInitialized(_this)));

    return _this;
  }

  _createClass(Designer, [{
    key: "render",
    value: function render() {
      var _this3 = this;

      var exportBtn;

      if (this.state.fatal_error) {
        return /*#__PURE__*/_react.default.createElement("div", {
          className: "".concat(this.props.className !== undefined ? this.props.className : "", " jofgen-D-fatal-error"),
          style: this.props.style
        }, this.props.fatal_error_icon, /*#__PURE__*/_react.default.createElement("div", {
          className: "jofgen-D-text-fatal-error"
        }, this.props.fatal_error_msg));
      }

      var extendedBtn;

      if (this.props.extended) {
        extendedBtn = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          onClick: this.preview,
          color: "success",
          size: this.props.size,
          active: this.state.view
        }, this.state.view ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, this.props.icons.designer, this.props.translation.backToDesigner) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, this.props.icons.preview, this.props.translation.formPreview)));
      }

      if (this.props.export) {
        exportBtn = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          className: "ml-1",
          onClick: this.exportJSON,
          color: "primary",
          size: this.props.size
        }, this.props.icons.export, this.props.translation.export), /*#__PURE__*/_react.default.createElement(_reactstrap.Modal, {
          isOpen: this.state.exportOpen,
          size: "lg",
          centered: true
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.ModalBody, null, /*#__PURE__*/_react.default.createElement("table", {
          className: "jofgen-D-title",
          style: {
            width: "100%"
          }
        }, /*#__PURE__*/_react.default.createElement("tbody", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("h5", null, this.props.translation.export)), /*#__PURE__*/_react.default.createElement("td", {
          style: {
            fontWeight: "bold",
            textAlign: "right"
          }
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          onClick: this.copyToClipboard,
          size: this.props.size
        }, this.props.icons.copy, " ", this.props.translation.copyToClipboard), /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          color: "link",
          onClick: this.exportJSON,
          size: this.props.size
        }, this.props.icons.close))))), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
          type: "textarea",
          value: JSON.stringify(this.state.sub_items),
          bsSize: this.props.size
        })))));
      }

      var no_of_elements = this.state.meta.length - 1;

      if (this.state.view) {
        return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_reactstrap.Modal, {
          isOpen: this.state.copy_notification,
          size: "sm",
          centered: true
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.ModalBody, {
          className: this.state.copy_notification_color
        }, this.state.copy_notification_icon, this.state.copy_notification_message)), /*#__PURE__*/_react.default.createElement("table", {
          className: "jofgen-D-title",
          style: {
            width: "100%"
          }
        }, /*#__PURE__*/_react.default.createElement("tbody", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("h5", null, this.props.title)), /*#__PURE__*/_react.default.createElement("td", {
          style: {
            fontWeight: "bold",
            textAlign: "right"
          }
        }, extendedBtn, exportBtn)))), /*#__PURE__*/_react.default.createElement(_Generator.default, {
          json: this.state.sub_items
        }));
      }

      return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_reactstrap.Modal, {
        isOpen: this.state.copy_notification,
        size: "sm",
        centered: true
      }, /*#__PURE__*/_react.default.createElement(_reactstrap.ModalBody, {
        className: this.state.copy_notification_color
      }, this.state.copy_notification_icon, this.state.copy_notification_message)), /*#__PURE__*/_react.default.createElement("table", {
        className: "jofgen-D-title",
        style: {
          width: "100%"
        }
      }, /*#__PURE__*/_react.default.createElement("tbody", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("h5", null, this.props.title)), /*#__PURE__*/_react.default.createElement("td", {
        style: {
          fontWeight: "bold",
          textAlign: "right"
        }
      }, extendedBtn, exportBtn)))), /*#__PURE__*/_react.default.createElement(_designer.Extensor, {
        style: {
          paddingBottom: "10px"
        },
        names: this.props.translation.types,
        values: _shared.designer_aliases,
        size: this.props.size,
        translation: this.props.translation,
        onSubmit: function onSubmit(e) {
          _this3.addChildren(0, e);
        }
      }), this.state.meta.map(function (item, idx) {
        var Tag;

        if (_shared.designer_aliases[item.type] !== undefined) {
          Tag = _shared.designer_aliases[item.type].tag;
          return /*#__PURE__*/_react.default.createElement(_react.Fragment, {
            key: idx
          }, /*#__PURE__*/_react.default.createElement(_designer.Container, {
            onUpButtonClick: idx > 0 ? function () {
              return _this3.changePosition(idx, -1);
            } : undefined,
            onDownButtonClick: idx < no_of_elements ? function () {
              return _this3.changePosition(idx, 1);
            } : undefined,
            onRemoveButtonClick: function onRemoveButtonClick() {
              return _this3.removeChildren(idx);
            },
            hideDissabled: _this3.props.hideDissabled,
            translations: _this3.props.translation,
            extras: _this3.state.sub_items[idx],
            size: _this3.props.size,
            sm: item.sm ? item.sm : 12,
            icons: _this3.props.icons.container,
            extended: _this3.props.extended
          }, /*#__PURE__*/_react.default.createElement(Tag, {
            uids: _this3.state.uids[idx],
            invalid: _this3.state.invalid[idx],
            valid: _this3.state.valid[idx],
            key: idx,
            extended: _this3.props.extended,
            value: item,
            sub_items: _this3.state.sub_items[idx],
            mode: _this3.props.mode,
            className: _this3.props.className,
            size: _this3.props.size,
            jkey: _this3.props.jkey,
            icons_set: _this3.props.icons,
            icons: _this3.props.icons.types[item.type],
            sm: _this3.props.sm,
            hideDissabled: _this3.props.hideDissabled,
            onChange: function onChange(value, valid) {
              _this3.onChange(value, valid, idx);
            },
            onChangeSub: function onChangeSub(value, valid, uids, subs) {
              _this3.onChangeSub(value, valid, uids, subs, idx);
            },
            translation: _this3.props.translation.types[item.type],
            translations: _this3.props.translation,
            designer_aliases: _shared.designer_aliases,
            package_designer_aliases: _shared.package_designer_aliases
          })), /*#__PURE__*/_react.default.createElement(_designer.Extensor, {
            key: "e-" + idx,
            style: {
              paddingBottom: "10px"
            },
            translation: _this3.props.translation,
            names: _this3.props.translation.types,
            values: _shared.designer_aliases,
            size: _this3.props.size,
            onSubmit: function onSubmit(e) {
              _this3.addChildren(idx + 1, e);
            }
          }));
        }

        return null;
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      try {
        if (!prevState.flag) {
          var nextState = {};

          if (nextProps.json !== undefined) {
            if (!Array.isArray(nextProps.json)) {
              console.error("Parameter JSON must be array");
              return {
                fatal_error: true
              };
            }

            nextState.uids = (0, _designer.getUids)(nextProps.json);
            nextState.meta = (0, _designer.jsonToMeta)(nextProps.json);
            nextState.sub_items = nextProps.json;
            nextState.valid = (0, _designer.jsonValid)(nextState.meta);
            nextState.invalid = _designer.recursive_get_unique_valid[nextProps.mode](nextState.uids);
          }

          nextState.fatal_error = false;
          return nextState;
        } else {
          return {
            flag: false
          };
        }
      } catch (_unused2) {
        return {
          fatal_error: true
        };
      }
    }
  }]);

  return Designer;
}(_react.Component);

exports.default = Designer;
Designer.propTypes = {
  onChange: _propTypes.default.func,
  export: _propTypes.default.bool,
  json: _propTypes.default.arrayOf(_propTypes.default.object),
  json_compression: _propTypes.default.oneOf(["min", "max"]),
  mode: _propTypes.default.oneOf(["tree", "linear", "linear_merge"]),
  hideDissabled: _propTypes.default.bool,
  jkey: _propTypes.default.shape(_utils.keyPropType),
  size: _propTypes.default.string,
  fatal_error_msg: _propTypes.default.string.isRequired,
  fatal_error_icon: _propTypes.default.any.isRequired,
  translation: _propTypes.default.shape({
    export: _propTypes.default.string.isRequired,
    formPreview: _propTypes.default.string.isRequired,
    backToDesigner: _propTypes.default.string.isRequired,
    copy_success: _propTypes.default.string.isRequired,
    copy_fail: _propTypes.default.string.isRequired,
    copyToClipboard: _propTypes.default.string.isRequired,
    add: _propTypes.default.string.isRequired,
    addComponent: _propTypes.default.string.isRequired,
    width: _propTypes.default.string.isRequired,
    smallWidthAlert: _propTypes.default.string.isRequired,
    columns: _propTypes.default.string.isRequired,
    types: _propTypes.default.exact({
      // primitives     
      bool: _propTypes.default.shape(_propTypes2.BoolTranslationPropType),
      color: _propTypes.default.shape(_propTypes2.BasicTypeTranslationPropType),
      rgx: _propTypes.default.shape(_propTypes2.CustomTranslationPropType),
      float: _propTypes.default.shape(_propTypes2.FloatTranslationPropType),
      int: _propTypes.default.shape(_propTypes2.IntegerTranslationPropType),
      p: _propTypes.default.shape(_propTypes2.ParagraphTranslationPropType),
      str: _propTypes.default.shape(_propTypes2.StringTranslationPropType),
      // input lists      
      float_il: _propTypes.default.shape(_propTypes2.ListFloatTranslationPropType),
      int_il: _propTypes.default.shape(_propTypes2.ListIntegerTranslationPropType),
      rgx_il: _propTypes.default.shape(_propTypes2.ListCustomTranslationPropType),
      str_il: _propTypes.default.shape(_propTypes2.ListStringTranslationPropType),
      // sections
      sec: _propTypes.default.shape(_propTypes2.SecTranslationPropType),
      pack: _propTypes.default.shape(_propTypes2.PackTranslationPropType)
    })
  }),
  icons: _propTypes.default.shape({
    close: _propTypes.default.any.isRequired,
    copy: _propTypes.default.any.isRequired,
    designer: _propTypes.default.any.isRequired,
    preview: _propTypes.default.any.isRequired,
    copy_success: _propTypes.default.any.isRequired,
    export: _propTypes.default.any.isRequired,
    copy_failed: _propTypes.default.any.isRequired,
    container: _propTypes.default.exact({
      view: _propTypes.default.any.isRequired,
      unview: _propTypes.default.any.isRequired,
      drop: _propTypes.default.any.isRequired,
      arrowDown: _propTypes.default.any.isRequired,
      arrowUp: _propTypes.default.any.isRequired
    }),
    types: _propTypes.default.exact({
      // primitives     
      bool: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      color: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      rgx: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      float: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      int: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      p: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        alert: _propTypes.default.any.isRequired
      }).isRequired,
      str: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      // input lists      
      float_il: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      int_il: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      rgx_il: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      str_il: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired,
        warnings: _propTypes.default.any.isRequired,
        warningsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      // sections
      sec: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired
      }).isRequired,
      pack: _propTypes.default.shape({
        icon: _propTypes.default.any.isRequired,
        invalid_icon: _propTypes.default.any.isRequired,
        errors: _propTypes.default.any.isRequired,
        errorsAlert: _propTypes.default.any.isRequired
      }).isRequired
    })
  }),
  fatal_error: _propTypes.default.shape({
    icon: _propTypes.default.any,
    text: _propTypes.default.string
  }),
  extended: _propTypes.default.bool
};
Designer.defaultProps = {
  title: "Designer",
  extended: true,
  jkey: _utils.Default_DkeyPropType,
  mode: "tree",
  hideDissabled: false,
  export: false,
  size: "sm",
  json_compression: "max",
  fatal_error_msg: "Ooops... Something went wrong. Unable to render designer.",
  fatal_error_icon: _icons2.fatal_error,
  translation: {
    export: "Export JSON",
    formPreview: "Form preview",
    copyToClipboard: "Copy to clipboard",
    backToDesigner: "Back to designer",
    copy_success: "Successfully copied to clipboard",
    copy_fail: "Oops .. Something went wrong. Copying to clipboard failed",
    add: "Add",
    addComponent: "Add component",
    width: "Width",
    columns: "columns",
    smallWidthAlert: "Text may be unreadable for users with lower screen resolution",
    types: {
      bool: _propTypes2.Default_BoolTranslation,
      color: _propTypes2.Default_ColorTranslation,
      rgx: _propTypes2.Default_CustomTranslation,
      float: _propTypes2.Default_FloatTranslation,
      int: _propTypes2.Default_IntTranslation,
      p: _propTypes2.Default_ParagraphTranslation,
      str: _propTypes2.Default_StringTranslation,
      float_il: _propTypes2.Default_ListFloatTranslation,
      int_il: _propTypes2.Default_ListIntegerTranslation,
      rgx_il: _propTypes2.Default_ListCustomTranslation,
      str_il: _propTypes2.Default_ListStringTranslation,
      sec: _propTypes2.Default_SecTranslation,
      pack: _propTypes2.Default_PackTranslation
    }
  },
  icons: {
    close: _icons.close,
    copy: _icons.copy,
    export: _icons2.exportIco,
    copy_success: _icons.copy_success,
    designer: _icons2.designer,
    preview: _icons2.preview,
    copy_failed: _icons.copy_failed,
    alert: _icons2.alert,
    container: {
      view: _icons2.view,
      unview: _icons2.unview,
      drop: _icons2.dropIco,
      arrowDown: _icons2.down,
      arrowUp: _icons2.up
    },
    types: {
      bool: {
        icon: _icons2.boolean,
        invalid_icon: _icons2.invalid_boolean,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert
      },
      color: {
        icon: _icons2.color,
        invalid_icon: _icons2.invalid_color,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      rgx: {
        icon: _icons2.custom,
        invalid_icon: _icons2.invalid_custom,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      float: {
        icon: _icons2.float,
        invalid_icon: _icons2.invalid_float,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      int: {
        icon: _icons2.integer,
        invalid_icon: _icons2.invalid_integer,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      p: {
        icon: _icons2.paragraph,
        invalid_icon: _icons2.invalid_paragraph,
        alert: _icons2.alert
      },
      str: {
        icon: _icons2.string,
        invalid_icon: _icons2.invalid_string,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      float_il: {
        icon: _icons2.inputlist,
        invalid_icon: _icons2.invalid_inputlist,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      int_il: {
        icon: _icons2.inputlist,
        invalid_icon: _icons2.invalid_inputlist,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      rgx_il: {
        icon: _icons2.inputlist,
        invalid_icon: _icons2.invalid_inputlist,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      str_il: {
        icon: _icons2.inputlist,
        invalid_icon: _icons2.invalid_inputlist,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert,
        warnings: _icons2.warnings,
        warningsAlert: _icons2.warningAlert
      },
      sec: {
        icon: _icons2.section,
        invalid_icon: _icons2.invalid_section,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert
      },
      pack: {
        icon: _icons2.section,
        invalid_icon: _icons2.invalid_section,
        errors: _icons2.error,
        errorsAlert: _icons2.errorAlert
      }
    }
  }
};