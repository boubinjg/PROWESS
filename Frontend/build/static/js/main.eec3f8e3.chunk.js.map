{"version":3,"sources":["components/Scheduler/Scheduler.js","components/Scheduler/index.js","components/App.js","components/Delete.js","components/Main.js","App.js","reportWebVitals.js","routes.js","index.js"],"names":["scheduler","window","Scheduler","skin","config","header","events","this","props","init","schedulerContainer","Date","clearAll","parse","nextProps","console","log","ref","input","style","width","height","Component","cfg","require","data","App","state","user","startdate","enddate","starttime","moment","format","endtime","focusedEnd","container","containerYAML","volume","test","expdescription","id","calendarData","testbedData","message","status","containers","volumes","containersYaml","testbedSelect","ram","cpu","sensors","hardware","tbRam","tbCpu","tbSensors","tbHardwre","handleSubmit","bind","handleChange","fetch","time","variable","setState","e","event","preventDefault","jsondata","StartDate","endDate","description","testbed","context","$","ajax","url","domain","backendPort","type","success","msg","text","alert","error","request","responseText","method","response","key","i","length","tbData","name","color","eventcolor","then","json","jsonData","UID","attributes","values","split","catch","testbedRes","result","exception","tbHardware","ret","push","fetchTBs","fetchShib","fetchTBRes","list","pop","idx","val","label","btn_add","class","margin","onClick","buttonAdd","btn_sub","buttonSub","formInp","Form","Control","placeholder","onChange","containerUpdate","target","value","marginTop","buttonAddY","buttonSubY","as","rows","containerUpdateYAML","checked","newHardware","Check","inline","updateHardware","newSensors","max","toString","min","defaultValue","step","updateSensors","buttonAddV","buttonSubV","volumeUpdate","Navbar","className","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","options","getOpts","selectTB","date","onDateChange","focused","onFocusChange","size","onSubmit","containerInput","containerInputYAML","volumeInput","Group","controlId","Label","getCPUandRAM","getSensors","getHardware","Button","variant","util","Delete","allMics","mic1","mic2","mic3","cam1","cam2","cam3","allCams","allSens","sdr","gpu","myExps","currentIds","fetchMyExps","all_sensors","all_mics","all_cams","inspect","open","exp","buttonVar","substring","bv","handleDownload","listItem","start_date","end_date","handleButtonInput","exps","myExperiments","Table","striped","bordered","hover","Main","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eec3f8e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\n\nconst scheduler = window.scheduler;\n\nexport default class Scheduler extends Component {\n    componentDidMount() {\n        scheduler.skin = 'material';\n        scheduler.config.header = [\n            'day',\n            'week',\n            'month',\n            'date',\n            'prev',\n            'today',\n            'next'\n        ];\n        const { events } = this.props;\n        scheduler.init(this.schedulerContainer, new Date());\n        scheduler.clearAll();\n        scheduler.parse(events);\n    }\n    componentWillReceiveProps(nextProps) {\n        console.log('componentWillReceiveProps', nextProps);\n        const { events } = nextProps\n        scheduler.init(this.schedulerContainer, new Date());\n        scheduler.clearAll();\n        scheduler.parse(events);\n\n    }\n    render() {\n        return (\n            <div\n                ref={ (input) => { this.schedulerContainer = input } }\n                style={ { width: '100%', height: '100%' } }\n            ></div>\n       );\n    }\n}\n","import Scheduler from './Scheduler';\nimport './Scheduler.css';\nexport default Scheduler;\n","import React, { Component, Fragment } from 'react';\nimport Scheduler from '../components/Scheduler';\nimport 'react-dates/initialize';\nimport DatePicker from \"react-datepicker\"\nimport moment from \"moment\"\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'antd/dist/antd.css'\nimport { TimePicker } from 'antd'\nimport momentPropTypes from 'react-moment-proptypes'\nimport PropTypes from 'prop-types'\nimport {Form, FormGroup, Checkbox, Col, Button, Navbar, Nav, NavDropdown,FormControl} from \"react-bootstrap\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../App.css';\nimport $ from 'jquery';\nimport Select from 'react-select';\n\nconst util = require('util')\nconst cfg = require('../config.json')\n\nconst data = []\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                        user: 'default',\n                        startdate: null,\n                        enddate:  null,\n                        starttime: moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n                        endtime:  moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n                        focusedEnd: false,\n                        container: [\"\"],\n                        containerYAML: [\"\"],\n\t\t\t            volume: [\"\"],\n                        test: 'test',\n                        expdescription: '',\n                        id: 0,\n                        calendarData: [],\n\t\t\t            testbedData: [],\n                        message: 'testtest',\n\t\t\t            status: 'Submitted',\n                        containers: 1,\n                        volumes: 1,\n                        containersYaml: 1,\n                        testbedSelect: 'none',\n                        ram: '1',\n                        cpu: '0.5',\n                        sensors: [],\n                        hardware: [],\n                        tbRam: null,\n                        tbCpu: null,\n                        tbSensors: [],\n\t\t\t            tbHardwre: []\n                    };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.fetch = this.fetch.bind(this);\n    }\n    handleChange(time, variable){\n\tif(variable == 'starttime')\n\t    try {\n            \tthis.setState({starttime: time.format('HH:mm:ss')})\n            } catch(e) {this.setState({starttime: null})}\n\telse if(variable == 'endtime')\n\t    try {\n            \tthis.setState({endtime: time.format('HH:mm:ss')})\n    \t    } catch(e) {this.setState({endtime: null})}\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        var jsondata = {user: this.state.user,\n                    container: this.state.container,\n\t\t    containerYAML: this.state.containerYAML,\n                    volume: this.state.volume,\n                    StartDate: this.state.startdate.format('YYYY-MM-DD'),\n                    endDate: this.state.enddate.format('YYYY-MM-DD'),\n                    starttime: this.state.starttime,\n                    endtime: this.state.endtime,\n                    description: this.state.expdescription,\n                    testbed: this.state.testbedSelect,\n                    ram: this.state.ram,\n                    cpu: this.state.cpu,\n                    sensors: this.state.sensors,\n                    hardware: this.state.hardware,\n                    status: this.state.status\n                }\n\n        console.log(jsondata)\n\n        var expStart = this.state.startdate.format('YYYY-MM-DD')\n        var expStartTime = this.state.starttime\n        var expEnd = this.state.enddate.format('YYYY-MM-DD')\n        var expEndTime = this.state.endtime\n        var text = this.state.container + '\\n' + this.state.expdescription\n        var newExp = {start_date: expStart +' '+ expStartTime, end_date: expEnd+' '+expEndTime,text: text, id: this.state.id}\n\n        console.log(jsondata.endDate)\n\n        //this.setState({calendarData: this.state.calendarData.concat(newExp)})\n        //this.setState({id: this.state.id+1})\n        var context = this;\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/post',\n            type: 'POST',\n            data: jsondata,\n            success: function(msg) {\n                    var text = 'Experiment Successfully Scheduled from '+context.state.startdate.format('YYYY-MM-DD') + ' ' + context.state.starttime + ' to '+ context.state.enddate.format('YYYY-MM-DD') + ' ' +context.state.endtime;\n                    alert(text)\n                    console.log(msg);\n            },\n            error: function(request, status, error){\n                    alert(request.responseText);\n            }\n        });\n        this.fetch()\n    }\n\n   fetch() {\n        var context = this;\n\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/api',\n            method: 'GET',\n            data: data,\n            success: function(response) {\n\t\tvar resp = response.message\n\t\tconsole.log('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\n\t\tfor (var key in response.message){\n\t\t\tconsole.log(context.state.testbedData)\n\t\t\t//console.log(context.state.testbedData.length)\n\t\t\tvar tb = response.message[key].testbed\n\t\t\tfor(var i=0; i< context.state.testbedData.length ;++i){\n\t\t\t\tvar tbData = context.state.testbedData[i]\n\t\t\t\tif(tbData.name == response.message[key].testbed){\n\t\t\t\t\tconsole.log('hit')\n\t\t\t\t\tresponse.message[key].color = '#'+tbData.eventcolor\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\tconsole.log(response.message[key])\n\t\tcontext.setState({\n                    calendarData: response.message\n                });\n            }\n        });\n    }\n    fetchShib() {\n        console.log(cfg.domain)\n        console.log('^^^^^^^^^^^^^^^^^')\n\tfetch('https://'+cfg.domain+'/Shibboleth.sso/Session')\n  \t\t.then(response => response.json())\n  \t\t.then((jsonData) => {\n    \t\t// jsonData is parsed json object received from url\n    \t     \t\tconsole.log(jsonData)\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$')\n                        const UID = jsonData.attributes[4].values[0].split('@')[0]\n\t\t\tconsole.log(jsonData.attributes[4].values[0].split('@')[0])\n\t\t\tconsole.log(UID)\n\t\t\tthis.setState({ user: UID})\n\t\t\tconsole.log('User')\n\t\t\tconsole.log(this.state.user)\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$')\n   \t\t})\n               .catch((error) => {\n                 // handle your errors here\n                 console.error(error)\n               })\n    }\n    fetchTBs() {\n\tconsole.log('###################')\n\tvar context = this\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/testbeds',\n            method: 'GET',\n            data: data,\n            success: function(response) {\n                context.setState({\n\t\t\ttestbedData: response.message\n                });\n\t\tconsole.log('TB Response:')\n\t\tconsole.log(response.message)\n\t\tcontext.fetch()\n            }\n        });\n    }\n    fetchTBRes(name) {\n    \tconsole.log('FETCH TB Results')\n\tvar context = this\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/testbedres?name='+name,\n            method: 'GET',\n            data: data,\n            success: function(response) {\n                context.setState({\n                    testbedRes: response.message\n                });\n\t\tconsole.log(context.state.testbedSelect)\n\t\tconsole.log('TB Response:')\n\t\tconsole.log(response.message)\n\t\tconsole.log(response.message[0])\n\n\t\tcontext.setState({ram: 0})\n\t\tcontext.setState({cpu: 0})\n\n\t\tcontext.setState({tbRam: response.message[0]})\n\t\tcontext.setState({tbCpu: response.message[1]})\n\t\tvar sensors = response.message[2]\n\n\t\tif(sensors == 'None')\n\t\t\tcontext.setState({tbSensors: null})\n\t\telse {\n\t\t\ttry{\n\t\t\t\tconst result = response.message[2].split('+')\n\t\t\t\tcontext.setState({tbSensors: result})\n\t\t\t\tconsole.log(result)\n\t\t\t}catch(exception) {\n\t\t\t\tconsole.log('Sensor Parsing Error')\n\t\t\t}\n\t\t}\n\t\tvar hardware = response.message[3]\n\t\tif(hardware == 'None')\n\t\t\tcontext.setState({tbHardware: null})\n\t\telse {\n\t\t\ttry{\n\t\t\t\tconst result = response.message[3].split('+')\n\t\t\t\tcontext.setState({tbHardware: result})\n\t\t\t\tconsole.log(result)\n\t\t\t} catch(exception) {\n\t\t\t\tconsole.log('Hardware Parsing Error')\n\t\t\t}\n\t\t}\n\t\tvar ret = []\n\t\tif(context.state.tbSensors != null) {\n\t\t\tfor(var i=0; i<context.state.tbSensors.length; i++){\n\t\t\t\tret.push(false)\n\t\t\t}\n\t\t\tcontext.setState({sensors: ret})\n\t\t}\n\t\tret = []\n\t\tif(context.state.tbHardware != null) {\n\t\t\tfor(var i=0; i<context.state.tbHardware.length; i++){\n\t\t\t\tret.push(false)\n\t\t\t}\n\t\t\tcontext.setState({hardware: ret})\n\t\t}\n            }\n        });\n\n    }\n\n    componentDidMount(){\n        console.log('Mounting!')\n        this.fetchTBs();\n\tthis.fetch();\n\tthis.fetchShib();\n\tthis.fetchTBRes();\n    }\n    buttonAdd() {\n        if(this.state.containers < 20) {\n            this.setState({ containers: this.state.containers+1 })\n            const list = [...this.state.container, \"\"]\n            this.setState({ container: list})\n        }\n    }\n    buttonSub() {\n        if(this.state.containers > 1) {\n            this.setState( {containers: this.state.containers-1})\n            const list = this.state.container\n            list.pop()\n            this.setState({ container: list })\n        }\n    }\n    buttonAddY() {\n        if(this.state.containersYaml < 20) {\n            this.setState({ containersYaml: this.state.containersYaml+1 })\n            const list = [...this.state.containerYAML, \"\"]\n            this.setState({ containerYAML: list})\n        }\n    }\n    buttonSubY() {\n        if(this.state.containersYaml > 1) {\n            this.setState( {containersYaml: this.state.containersYaml-1})\n            const list = this.state.containerYAML\n            list.pop()\n            this.setState({ containerYAML: list })\n        }\n    }\n\n    buttonAddV() {\n        if(this.state.volumes < 5) {\n            this.setState({ volumes: this.state.volumes+1 })\n            const list = [...this.state.volume, \"\"]\n            this.setState({ volume: list})\n        }\n    }\n    buttonSubV() {\n        if(this.state.volumes > 1) {\n            this.setState( {volumes: this.state.volumes-1})\n            const list = this.state.volume\n            list.pop()\n            this.setState({ volume: list })\n        }\n    }\n\n    containerUpdate(idx, val){\n        const list = this.state.container\n        list[idx] = val\n        this.setState({ container: list })\n    }\n    containerUpdateYAML(idx, val){\n        const list = this.state.containerYAML\n        list[idx] = val\n        this.setState({ containerYAML: list })\n    }\n\n    volumeUpdate(idx, val){\n        const list = this.state.volume\n        list[idx] = val\n        this.setState( {volume: list} )\n    }\n\n    getOpts(){\n\tvar i\n\tvar list = []\n\tfor (i = 0; i < this.state.testbedData.length; ++i) {\n\t\tlist.push({label: this.state.testbedData[i].name})\n\t}\n        return list;\n    }\n\n    containerInput() {\n        const divStyle = {marginTop: \"10px\"}\n        const btn_add =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonAdd()}> + </button>\n        const btn_sub =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonSub()}> - </button>\n\n        const formInp = []\n        var i;\n        for (i = 0; i< this.state.containers; i++){\n            const idx = i\n            formInp.push(<Form.Control style={{margin: \"5px\"}} type=\"text\" placeholder=\"Enter Dockerhub Repository Name\" onChange={e => this.containerUpdate(idx, e.target.value)}/>\n            )\n        }\n\n        return (\n            <div style={divStyle}>\n            {formInp}\n            {btn_add}\n            {btn_sub}\n\t    </div>\n        )\n    }\n\n  containerInputYAML() {\n        const divStyle = {marginTop: \"10px\"}\n        const btn_add =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonAddY()}> + </button>\n        const btn_sub =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonSubY()}> - </button>\n\n        const formInp = []\n        var i;\n        for (i = 0; i< this.state.containersYaml; i++){\n            const idx = i\n            formInp.push(<Form.Control style={{margin: \"5px\"}} as=\"textarea\" rows={5} placeholder=\"Enter Container YAML\" onChange={e => this.containerUpdateYAML(idx, e.target.value)}/>\n            )\n        }\n\n        return (\n            <div style={divStyle}>\n            {formInp}\n            {btn_add}\n            {btn_sub}\n\t    </div>\n        )\n    }\n\n    selectTB(e){\n\tthis.setState({ testbedSelect: e.label });\n\tconsole.log('testbedSelect Currently');\n        console.log(this.state.testbedSelect);\n\tconsole.log(e.label);\n\tconsole.log(e);\n\tthis.fetchTBRes(e.label);\n    }\n\n    updateHardware(i, checked) {\n\tvar newHardware = this.state.hardware\n\tnewHardware[i] = checked\n\tthis.setState({hardware: newHardware})\n    }\n\n    getHardware(){\n\n\tvar ret = []\n\ttry{\n\t\tif(this.state.tbHardware.length > 0) {\n\t\t\tret.push(<p>Specialized Hardware</p>)\n\t\t}\n\n\t\tfor(var i = 0; i<this.state.tbHardware.length; ++i){\n\t\t\tvar name = this.state.tbHardware[i]\n\t\t\tret.push(<Form.Check inline label= {name} type={'checkbox'} id={'inline-${type}-3'} onChange={e => this.updateHardware(i, e.target.checked)}/>)\n\t\t}\n\t} catch(exception) {\n\t\tconsole.log('error rendering hardware buttons')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t{ret}\n\t\t</div>\n     \t)\n    }\n\n    updateSensors(i, checked) {\n\tvar newSensors = this.state.sensors\n\tnewSensors[i] = checked\n\tthis.setState({sensors: newSensors})\n    }\n\n    getCPUandRAM() {\n\n\tvar ret = []\n\n\tif(this.state.tbRam > 0){\n\t\tret.push(<p>RAM: {this.state.ram}GB</p>)\n\t\tvar max = this.state.tbRam.toString();\n\t\tret.push(\n\t\t<div>\n\t\t<input\n      \t\tid=\"typeinp\"\n      \t\ttype=\"range\"\n      \t\tmin=\"1\" max={max}\n\t\tvalue={\"1\"}\n      \t\tvalue={this.state.ram}\n      \t\tonChange={e => this.setState({ram: e.target.value})}\n      \t\tstep=\"1\"/>\n\t\t</div>\n\t\t)\n\t}\n\n\tif(this.state.tbCpu > 0){\n\t\tret.push(<p>CPUs: {this.state.cpu}</p>)\n\t\tvar max = this.state.tbCpu.toString();\n\t\tret.push(\n\t\t<div>\n\t\t<input\n      \t\tid=\"typeinp\"\n      \t\ttype=\"range\"\n      \t\tmin=\"0.5\" max={max}\n\t\tdefaultValue={\"0.5\"}\n      \t\tvalue={this.state.cpu}\n      \t\tonChange={e => this.setState({cpu: e.target.value})}\n      \t\tstep=\"0.5\"/>\n\t\t</div>\n\t\t)\n\t}\n\n\n\n\treturn (\n\t\t<div>\n\t\t{ret}\n\t\t</div>\n\t)\n    }\n\n    getSensors(){\n\n\tvar ret = []\n\ttry{\n\t\tif(this.state.tbSensors.length > 0)\n\t\t\tret.push(<p>Sensors</p>)\n\n\t\tfor(var i = 0; i<this.state.tbSensors.length; ++i){\n\t\t\tvar name = this.state.tbSensors[i]\n\t\t\tret.push(<Form.Check inline label= {name} type={'checkbox'} id={'inline-${type}-3'} onChange={e => this.updateSensors(i, e.target.checked)}/>)\n\t\t}\n\t} catch(exception) {\n\t\tconsole.log('error rendering sensor buttons')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t{ret}\n\t\t</div>\n     \t)\n    }\n    volumeInput(){\n        const divStyle = {marginTop: \"10px\"}\n        const btn_add =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonAddV()}> + </button>\n        const btn_sub =  <button type=\"button\" class=\"btn-primary\" style={{width: \"30px\", margin: \"5px\"}} onClick={ () => this.buttonSubV()}> - </button>\n\n        const formInp = []\n        var i;\n        for (i = 0; i< this.state.volumes; i++){\n            const idx = i\n            formInp.push(<Form.Control style={{margin: \"5px\"}} type=\"text\" placeholder=\"Enter Volume Name\" onChange={e => this.volumeUpdate(idx, e.target.value)}/>\n            )\n        }\n\n        return (\n            <div style={divStyle}>\n            {formInp}\n            {btn_add}\n            {btn_sub}\n            </div>\n        )\n\n    }\n\n    render() {\n\treturn (\n            <div>\n                <Navbar className=\"color-nav\" expand='xl'>\n                  <Navbar.Brand href=\"#home\">Pomerene Lab IoT Testbed Experiment Scheduler</Navbar.Brand>\n                  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                  <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                      <Nav.Link href=\"/\">Schedule a New Experiment</Nav.Link>\n                      <Nav.Link href=\"/delete\">View My Scheduled Experiments</Nav.Link>\n                    </Nav>\n                 </Navbar.Collapse>\n                </Navbar>\n                <div class=\"container\">\n                <div>\n                    <h1>Schedule a New Experiment</h1>\n                </div>\n                <br/>\n\n\t\t<div class=\"row\">\n                <div class=\"col-md\">\n\t\t\t<p>Testbed Node</p>\n\t\t\t<Select options={ this.getOpts() } onChange={e => this.selectTB(e)} />\n\t\t\t<br/>\n\n\t\t</div>\n                </div>\n\n                <div class=\"row\">\n                <div class=\"col-md\">\n                    <p>Start Date</p>\n                    <SingleDatePicker\n                    date={this.state.startdate}\n                    onDateChange={(startdate) => this.setState( {startdate})}\n                    focused={this.state.focused}\n                    onFocusChange={({focused}) => this.setState({focused})}\n                    id=\"startdate\"/>\n                </div>\n                <div class=\"col-md\">\n                    <p>End Date</p>\n                    <SingleDatePicker\n                    date={this.state.enddate}\n                    onDateChange={(enddate) => this.setState( {enddate})}\n                    focused={this.state.focusedEnd}\n                    onFocusChange={({focused: focusedEnd}) => this.setState({focusedEnd})}\n                    id=\"enddate\"/>\n                </div>\n                </div>\n\n                <div class=\"row\">\n                <div class=\"col-md\">\n                <p>Start Time</p>\n                <TimePicker defaultValue={moment('00:00:00', 'HH:mm:ss')} size=\"large\" onChange={(e) => this.handleChange(e,'starttime')}/>\n                </div>\n                <div class=\"col-md\">\n                <p>End time</p>\n                <TimePicker defaultValue={moment('00:00:00', 'HH:mm:ss')} size=\"large\" onChange={(e) => this.handleChange(e,'endtime')}/>\n                </div>\n                </div>\n                <div>\n\n                <Form onSubmit={this.handleSubmit}>\n                <p> Experiment Container(s) </p>\n\t\t{this.containerInput()}\n\n\t\t<p> Experiment Container(s) YAML </p>\n\t\t{this.containerInputYAML()}\n\n                <p> Shared Volumes (Optional) </p>\n\t\t{this.volumeInput()}\n\n                <Form.Group controlId=\"textarea\">\n\n                <Form.Label>Experiment Description</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} onChange={e => this.setState({ expdescription: e.target.value })}/>\n                </Form.Group>\n\n\t\t{ this.getCPUandRAM() }\n\n\t\t{ this.getSensors() }\n\n\t\t{ this.getHardware() }\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                </Form>\n                </div>\n\n                <div class=\"row\">\n                <div className='scheduler-container'>\n                    <Scheduler events={this.state.calendarData}/>\n                </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n }\n export default App;\n","import React, { Component } from 'react';\nimport Scheduler from '../components/Scheduler';\nimport 'react-dates/initialize';\nimport DatePicker from \"react-datepicker\"\nimport moment from \"moment\"\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'antd/dist/antd.css'\nimport { TimePicker } from 'antd'\nimport momentPropTypes from 'react-moment-proptypes'\nimport PropTypes from 'prop-types'\nimport {Table, Form, FormGroup, Checkbox, Col, Button, Navbar, Nav, NavDropdown,FormControl} from \"react-bootstrap\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../App.css';\nimport $ from 'jquery';\nimport { saveAs } from 'file-saver'\nimport * as JSZip from 'jszip'\n\nconst data = [];\nconst cfg = require('../config.json')\n\nconst util = require('util')\n\nclass Delete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n                        user: 'default',\n                        startdate: null,\n                        enddate:  null,\n                        starttime: moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n                        endtime:  moment('00:00:00', 'HH:mm:ss').format('HH:mm:ss'),\n                        focusedEnd: false,\n                        container: null,\n                        allMics: false,\n                        mic1: false,\n                        mic2: false,\n                        mic3: false,\n                        cam1: false,\n                        cam2: false,\n                        cam3: false,\n                        allCams: false,\n                        allSens: false,\n                        sdr: false,\n                        gpu: false,\n                        test: 'test',\n                        expdescription: '',\n                        id: 0,\n                        calendarData: [],\n                        myExps: [],\n                        currentIds: []\n                    };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.fetch = this.fetch.bind(this);\n        this.fetchMyExps = this.fetchMyExps.bind(this);\n    }\n    handleChange(time, variable){\n        if(variable == 'starttime')\n            this.setState({starttime: time.format('HH:mm:ss')})\n        else if(variable == 'endtime')\n            this.setState({endtime: time.format('HH:mm:ss')})\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        var jsondata = {user: this.state.user,\n                    container: this.state.container,\n                    StartDate: this.state.startdate.format('YYYY-MM-DD'),\n                    endDate: this.state.enddate.format('YYYY-MM-DD'),\n                    starttime: this.state.starttime,\n                    endtime: this.state.endtime,\n                    description: this.state.expdescription,\n                    all_sensors: this.state.allSens,\n                    all_mics: this.state.allMics,\n                    mic1: this.state.mic1,\n                    mic2: this.state.mic2,\n                    mic3: this.state.mic3,\n                    all_cams: this.state.allCams,\n                    cam1: this.state.mic1,\n                    cam2: this.state.mic2,\n                    cam3: this.state.mic3,\n                    gpu: this.state.gpu,\n                    sdr: this.state.sdr\n                }\n\n        console.log(jsondata)\n\n        var expStart = this.state.startdate.format('YYYY-MM-DD')\n        var expStartTime = this.state.starttime\n        var expEnd = this.state.enddate.format('YYYY-MM-DD')\n        var expEndTime = this.state.endtime\n        var text = this.state.container + '\\n' + this.state.expdescription\n        var newExp = {start_date: expStart +' '+ expStartTime, end_date: expEnd+' '+expEndTime,text: text, id: this.state.id}\n\n        console.log(jsondata.endDate)\n\n        //this.setState({calendarData: this.state.calendarData.concat(newExp)})\n        //this.setState({id: this.state.id+1})\n\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/post',\n            type: 'POST',\n            data: jsondata,\n            success: function(msg) {\n                console.log(msg);\n            },\n            error: function(request, status, error){\n                    alert(request.responseText);\n            }\n        });\n        this.fetch()\n    }\n    fetchShib() {\n    \tvar context = this;\n\tfetch('https://'+cfg.domain+'/Shibboleth.sso/Session')\n  \t\t.then(response => response.json())\n  \t\t.then((jsonData) => {\n    \t     \t\tconsole.log(jsonData)\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$')\n                        const UID = jsonData.attributes[4].values[0].split('@')[0]\n\t\t\tconsole.log(jsonData.attributes[4].values[0].split('@')[0])\n\t\t\tconsole.log(UID)\n\t\t\tthis.setState({ user: UID})\n\t\t\tconsole.log('User')\n\t\t\tconsole.log(this.state.user)\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$')\n\t\t\tthis.fetchMyExps()\n   \t\t})\n               .catch((error) => {\n                 console.error(error)\n               })\n    }\n\n    fetchMyExps() {\n        var context = this;\n        var jsondata = {user: this.state.user}\n\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/postExps',\n            type: 'POST',\n            data: jsondata,\n            success: function(response) {\n                context.setState({\n                    myExps: response.message\n                });\n                console.log(util.inspect(response))\n            }\n        });\n    }\n    fetch() {\n        var context = this;\n\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/api',\n            method: 'GET',\n            data: data,\n            success: function(response) {\n                context.setState({\n                    calendarData: response.message\n                });\n            }\n        });\n    }\n    componentDidMount(){\n        console.log('Mounting!')\n        this.fetch();\n\tthis.fetchShib();\n        this.fetchMyExps();\n    }\n    handleButtonInput(e) {\n        console.log(e.target.value)\n        var context = this\n        var data = {user: this.state.user, idx: e.target.value}\n        console.log(data)\n        $.ajax({\n            url: 'https://'+cfg.domain+':'+cfg.backendPort+'/postDel',\n            method: 'post',\n            data: data,\n            success: function(response) {\n            }\n        });\n        this.fetch();\n        this.fetchMyExps();\n    }\n    handleDownload(e) {\n        console.log(e.target.value)\n        var context = this;\n        var user = this.state.user;\n\tvar idx = e.target.value;\n        console.log(data)\n\n\twindow.open('https://'+cfg.domain+':'+cfg.backendPort+'/download?user='+user+'&idx='+idx)\n\n\n        this.fetch();\n        this.fetchMyExps();\n    }\n\n    myExperiments(){\n        console.log('MyExps: ')\n        console.log(util.inspect(this.state.myExps))\n        var list = []\n        const self = this;\n        for(var i=0; i<this.state.myExps.length; i++){\n            var exp = this.state.myExps[i]\n            var label = 'Container: '+exp.container+' '\n            var idx = exp.id\n            this.state.currentIds.push(idx)\n            var buttonVar = \"primary\"\n\t    if(exp.status.substring(0,5) == 'error')\n\t        buttonVar = \"danger\"\n\t    var bv = \"\"\n\t    if(exp.status.substring(0,8) == 'Complete') {\n\n\t    \tvar bv =  <Button value={idx} variant={buttonVar} type=\"submit\" onClick={e => this.handleDownload(e, \"value\")} >\n                            Download Results\n                        </Button>\n\t    }\n\t    var listItem =\n                <tr>\n                    <td>{exp.id}</td>\n                    <td>{exp.container}</td>\n                    <td>{exp.start_date}</td>\n                    <td>{exp.end_date}</td>\n\t\t    <td>{exp.status} <br/> {bv} </td>\n                    <td>\n                        <Button value={idx} variant={buttonVar} type=\"submit\" onClick={e => this.handleButtonInput(e, \"value\")} >\n                            Delete\n                        </Button>\n                    </td>\n                </tr>\n            list.push(listItem)\n        }\n        console.log('CURRENT IDS:')\n        console.log(this.state.currentIds)\n        return list\n    }\n    render() {\n        const exps = this.myExperiments()\n\n        return (\n            <div>\n                <Navbar className=\"color-nav\" expand='xl'>\n                  <Navbar.Brand href=\"#home\">Pomerene Lab IoT Testbed Experiment Scheduler</Navbar.Brand>\n                  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                  <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                      <Nav.Link href=\"/\">Schedule a New Experiment</Nav.Link>\n                      <Nav.Link href=\"/Delete\">View My Scheduled Experiments</Nav.Link>\n                    </Nav>\n                 </Navbar.Collapse>\n                </Navbar>\n\n                <div class=\"conatainer\">\n                <div class='row'>\n                <div class='col-xl'>\n                <div>\n                    <h1>View My Scheduled Experiments</h1>\n                </div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Experiment ID</th>\n                            <th>Container</th>\n                            <th>Start Time</th>\n                            <th>End Time</th>\n\t\t\t    <th>Status</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {exps}\n                    </tbody>\n                </Table>\n                </div>\n                </div>\n                <div class=\"row\">\n                <div className='scheduler-container'>\n                    <Scheduler events={this.state.calendarData}/>\n                </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n }\n export default Delete;\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport App from './App'\nimport Delete from './Delete'\n\nconst Main = () => (\n    <main>\n        <Switch>\n            <Route exact path='/' component={App}/>\n            <Route path='/delete' component={Delete}/>\n        </Switch>\n    </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Main from './components/Main'\nimport Delete from './components/Delete';\n\nconst App = () => (\n    <div>\n    <Main />\n    </div>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport App from './components/App';\nimport Delete from './components/Delete';\n\nexport default (\n    <BrowserRouter path=\"/\" component={App}>\n        <Route path=\"/delete\" component={Delete} />\n    </BrowserRouter>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport routes from './routes';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}